"use strict";(self.webpackChunk_test_pages_docs=self.webpackChunk_test_pages_docs||[]).push([[285],{6267:e=>{e.exports=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/test-pages/","tagsPath":"/test-pages/tags","isLast":true,"routePriority":-1,"contentPath":"/home/runner/work/test-pages/test-pages/docs/docs","contentPathLocalized":"/home/runner/work/test-pages/test-pages/docs/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"docs","title":"Web API","description":"","source":"@site/docs/docs.mdx","sourceDirName":".","slug":"/docs","permalink":"/test-pages/docs","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Web API","hide_table_of_contents":true},"sidebar":"defaultSidebar"}],"drafts":[],"sidebars":{"defaultSidebar":[{"type":"doc","id":"docs"}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[],"blogListPaginated":[],"blogTags":{},"blogTagsListPath":"/test-pages/blog/tags","blogTagsPaginated":[]}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/test-pages/","source":"@site/src/pages/index.js"},{"type":"mdx","permalink":"/test-pages/markdown-page","source":"@site/src/pages/markdown-page.md","title":"Markdown page example","description":"You don\'t need React to write simple standalone pages.","frontMatter":{"title":"Markdown page example"},"unlisted":false},{"type":"jsx","permalink":"/test-pages/my-react-page","source":"@site/src/pages/my-react-page.js"}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-sitemap":{},"docusaurus-plugin-redoc":{"reference":{"converted":{"openapi":"3.0.1","info":{"version":"v1","title":"Web API","description":"# Overview\\nThe MetaMask Institutional Web API lets you retrieve your transactions history and snapshots of your portfolio valuations, automate reporting, or build your own applications. To get started:\\n\\n1. Log in the [dashboard](https://metamask-institutional.io/)\\n2. Visit the page [API](https://metamask-institutional.io/api-subscription)\\n3. Generate your API key\\n4. Use the API key in your HTTP requests\\n\\n# Authorization\\n<SecurityDefinitions />\\n\\n# Rate Limits\\nExcessive Web API requests in a short duration may trigger a 429 error response from MetaMask Institutional, indicating that your API key has hit our rate limit. We enforce these limits to ensure the stability of our API.\\n\\nOur API rate limit is determined by the number of calls your application makes within a rolling 1-second window. Exceeding this limit will result in 429 error responses, potentially leading to unexpected behavior in your application. The limit varies based on your MetaMask Institutional subscription.\\n\\nThrottling is an effective strategy to ensure your application stays within the rate limits. It involves limiting the number of API requests your application can make in a given amount of time. This can be achieved by implementing a delay between requests or queuing requests and processing them at a fixed rate.\\n\\nThere are several libraries available that can help you implement throttling in your application:\\n- For Node.js, consider using the [Bottleneck](https://www.npmjs.com/package/bottleneck) library. It\'s a powerful, easy-to-use rate limiter that you can use to control the rate of API requests.\\n- For Python, you might want to use [ratelimiter](ratelimiter), which offers a simple and flexible rate limiting implementation.\\n- For Java, [Bucket4j](Bucket4j) is a powerful library that supports multiple rate limiting algorithms.\\n- For Ruby, [ratelimit](https://rubygems.org/gems/ratelimit/versions/0.0.6) is a straightforward rate limiter that\'s easy to integrate into any application.\\n\\nRemember, the key to successful throttling is to balance between staying within the rate limits and providing a smooth user experience.\\n\\n# Monthly Quotas\\nEach API key on the MetaMask Institutional Web API is subject to a monthly quota, which is determined by your subscription level. For example, an API key may be allocated a quota of 1,000 requests per month.\\n\\nAt the commencement of each new month, the usage count is reset to zero, providing a fresh quota for the month ahead.\\n\\nIt\'s important to note that even after reaching the monthly quota, the API key remains active. You can continue to make requests using the same API key. However, any requests beyond the quota will incur additional charges, referred to as overage fees. Please review your subscription details for information on these fees.\\n\\n# Support\\nIf you have any questions or run into any issues while using the MetaMask Institutional Web API, you can find help in the [MetaMask Institutional Help Center](https://mmi-support.zendesk.com), or [Submit a request](https://mmi-support.zendesk.com/hc/en-us/requests/new) to get in touch with our support team.\\n\\n# Legal\\nBy using MetaMask Institutional Web API, you accept the [Terms and Conditions](https://metamask-institutional.io/terms-and-conditions).\\n","termsOfService":"https://metamask-institutional.io/terms-and-conditions","contact":{"name":"Submit an issue","url":"https://mmi-support.zendesk.com/hc/en-us/requests/new"}},"servers":[{"url":"https://api.metamask-institutional.io"}],"tags":[{"name":"Snapshots","description":"Retrieve valuations of your assets at a specific time across accounts."},{"name":"Transactions","description":"The past transactions you executed through MetaMask Institutional."},{"name":"DeFi","description":"Get detailed Profit & Loss data on open DeFi positions."},{"name":"transaction_model","x-displayName":"Transaction","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/TransferDto\\" />\\n"},{"name":"position_model","x-displayName":"Position","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Position\\" />\\n"},{"name":"profit_model","x-displayName":"Profit","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Profit\\" />\\n"}],"x-tagGroups":[{"name":"General","tags":["Snapshots","Transactions","DeFi"]},{"name":"Models","tags":["transaction_model","position_model","profit_model"]}],"paths":{"/snapshots/{snapshotId}":{"get":{"tags":["Snapshots"],"summary":"Get Snapshot","description":"Get a comprehensive overview of a portfolio\'s positions and valuations at a given time. Includes token balances, DeFi positions and NFT collections. You can find your snapshot IDs using the endpoint `GET /snapshots`.","operationId":"GetSnapshotById","parameters":[{"name":"snapshotId","required":true,"in":"path","schema":{"type":"string"}},{"name":"dataType","required":false,"in":"query","description":"The data format to return.","example":"json","schema":{"enum":["json","csv"],"type":"string"}},{"name":"currency","required":false,"in":"query","description":"The currency to get the price values in.","example":"usd","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetCustomerSnapshotResponseDto"}}}},"400":{"description":"Unknown currency XYZ.","content":{"application/json":{"example":{"statusCode":400,"message":"Unknown currency xyz."}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"},"404":{"description":"Customer snapshot couldn\'t be found.","content":{"application/json":{"example":{"statusCode":404,"message":"Customer snapshot couldn\'t be found."}}}}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request GET \\\\\\n  --url \'https://api.metamask-institutional.io/snapshots/{snapshotId}?dataType=json&currency=usd\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots/{snapshotId}\',\\n  params: {dataType: \'json\', currency: \'usd\'},\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots/{snapshotId}?dataType=json&currency=usd\\"\\nheaders = {\\n    \\"X-Api-Key\\": \\"<APIKEY>\\"\\n}\\nresponse = requests.request(\\"GET\\", url, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/snapshots":{"get":{"tags":["Snapshots"],"summary":"Search Snapshot IDs","description":"Fetch a paginated list containing the IDs of snapshots associated with a specific customer, matching the search filters. The IDs can then be used to fetch the actual snapshot content with `GET /snapshots/{snapshotId}`.","operationId":"GetSnapshotIds","parameters":[{"name":"fromTimestamp","required":false,"in":"query","description":"The start date and time for the range of snapshots to retrieve, formatted as an ISO 8601 string.  <br> <br> **Depending how you run the query, you might need to URL-encode this parameter. For instance `2023-10-25T13:36:45+02:00` would become `2023-10-25T13%3A36%3A45%2B02%3A00`.**","example":"2023-10-25T13:36:45+02:00","schema":{"type":"string"}},{"name":"toTimestamp","required":false,"in":"query","description":"The end date and time for the range of snapshots to retrieve, formatted as an ISO 8601 string. <br> <br> **Depending how you run the query, you might need to URL-encode this parameter. For instance `2023-10-26T13:36:45+02:00` would become `2023-10-26T13%3A36%3A45%2B02%3A00`.**","example":"2023-10-26T13:36:45+02:00","schema":{"type":"string"}},{"name":"page","required":false,"in":"query","description":"The page number to retrieve in the paginated list of snapshots.","example":1,"schema":{"minimum":1,"type":"number"}},{"name":"perPage","required":false,"in":"query","description":"The number of snapshots to retrieve per page.","example":10,"schema":{"minimum":10,"type":"number"}},{"name":"sort","required":false,"in":"query","description":"The property to sort the snapshots by.","schema":{"enum":["createdAt","updatedAt"],"type":"string"}},{"name":"order","required":false,"in":"query","description":"The order to sort the snapshots in.","schema":{"enum":["desc","asc"],"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaginatedCustomerSnapshotsDto"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request GET \\\\\\n  --url \'https://api.metamask-institutional.io/snapshots?fromTimestamp=2023-10-25T13%3A36%3A45%2B02%3A00&toTimestamp=2023-10-26T13%3A36%3A45%2B02%3A00&page=2&perPage=10&sort=createdAt&order=asc\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots\',\\n  params: {\\n    fromTimestamp: \'2022-10-25T13:36:45+02:00\',\\n    toTimestamp: \'2023-10-26T13:36:45+02:00\',\\n    page: \'2\',\\n    perPage: \'10\',\\n    sort: \'createdAt\',\\n    order: \'asc\'\\n  },\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots\\"\\nquerystring = {\\"fromTimestamp\\":\\"2022-10-25T13:36:45+02:00\\",\\"toTimestamp\\":\\"2023-10-26T13:36:45+02:00\\",\\"page\\":\\"2\\",\\"perPage\\":\\"10\\",\\"sort\\":\\"createdAt\\",\\"order\\":\\"asc\\"}\\nheaders = {\\"X-Api-Key\\": \\"<APIKEY>\\"}\\nresponse = requests.request(\\"GET\\", url, headers=headers, params=querystring)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}},"post":{"tags":["Snapshots"],"summary":"Create Snapshot","description":"Initiate the creation of a new snapshot. Please note that the exact timing of the snapshot creation is not guaranteed. This is because the request is queued and processed asynchronously.  <br> <br> After this request responded successfully, wait some time for the snapshot to be created, and query the endpoint `GET /snapshots` to find its ID. It typically takes between a few seconds and a few minutes, depending on how busy the queue is.","operationId":"CreateSnapshot","responses":{"201":{"description":""},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request POST \\\\\\n  --url https://api.metamask-institutional.io/snapshots \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'POST\',\\n  url: \'https://api.metamask-institutional.io/snapshots\',\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots\\"\\npayload = \\"\\"\\nheaders = {\\"X-Api-Key\\": \\"<APIKEY>\\"}\\nresponse = requests.request(\\"POST\\", url, data=payload, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/snapshots/aud":{"get":{"tags":["Snapshots"],"summary":"Get Current AUD","description":"Fetch the current customer\'s portoflio valuation, in US Dollars. The valuation at the specified date is determined by valuing all assets within an address. Including, the dollar value of any token assets, NFT dollar floor prices, dollar value of any DeFi assets (less the dollar value of any DeFi debts), dollar value of any rewards or other accruals, and the dollar value of staking positions and staking rewards.","operationId":"GetSnapshotAud","responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerAudDto"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request GET \\\\\\n  --url https://api.metamask-institutional.io/snapshots/aud \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots/aud\',\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots/aud\\"\\npayload = \\"\\"\\nheaders = {\\"X-Api-Key\\": \\"<APIKEY>\\"}\\nresponse = requests.request(\\"GET\\", url, data=payload, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/transactions/search":{"post":{"summary":"Search Transactions","description":"This endpoint allows you to search through your past transactions across various blockchains, providing a powerful tool for analyzing your transaction history. You can filter transactions based on various criteria such as sender and receiver addresses, chain IDs, time range, asset types, contract addresses, token IDs, transaction hashes, and block numbers.\\n\\n**Note:** Only transactions executed through the MetaMask Institutional (MMI) extension are searchable with this endpoint.\\n","operationId":"SearchTransactions","tags":["Transactions"],"parameters":[{"name":"page","in":"query","description":"The page of results being requested","required":false,"schema":{"type":"number","default":1,"example":1}},{"name":"perPage","in":"query","description":"The number of results per page","required":false,"schema":{"type":"number","default":50,"example":50}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchTransactionsBodyDto"}}}},"responses":{"200":{"description":"A list of transactions that match the search criteria.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransferDto"}}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request POST \\\\\\n  --url \'https://api.metamask-institutional.io/transactions/search?perPage=10&page=2\' \\\\\\n  --header \'Content-Type: application/json\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\' \\\\\\n  --data \'{\\n  \\"from\\": [\\n    \\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"\\n  ],\\n  \\"to\\": [\\n    \\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"\\n  ],\\n  \\"chainIds\\": [\\n    1,\\n    5,\\n    137\\n  ],\\n  \\"fromTimestamp\\": \\"2022-10-25T13:36:45+02:00\\",\\n  \\"toTimestamp\\": \\"2023-10-26T13:36:45+02:00\\",\\n  \\"assetTypes\\": [\\n    \\"token\\",\\n    \\"native\\"\\n  ],\\n  \\"contractAddresses\\": [\\n    \\"0xfaff15c6cdaca61a4f87d329689293e07c98f578\\"\\n  ],\\n  \\"tokenIds\\": [\\n    \\"5\\",\\n    \\"1245\\"\\n  ],\\n  \\"transactionHashes\\": [\\n    \\"0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a\\",\\n    \\"0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9\\"\\n  ],\\n  \\"blockNumbers\\": [\\n    18685487,\\n    3245\\n  ]\\n}\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'POST\',\\n  url: \'https://api.metamask-institutional.io/transactions/search\',\\n  params: {perPage: \'10\', page: \'2\'},\\n  headers: {\\n    \'Content-Type\': \'application/json\',\\n    \'X-Api-Key\': \'<APIKEY>\'\\n  },\\n  data: {\\n    from: [\'0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\'],\\n    to: [\'0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\'],\\n    chainIds: [1, 5, 137],\\n    fromTimestamp: \'2022-10-25T13:36:45+02:00\',\\n    toTimestamp: \'2023-10-26T13:36:45+02:00\',\\n    assetTypes: [\'token\', \'native\'],\\n    contractAddresses: [\'0xfaff15c6cdaca61a4f87d329689293e07c98f578\'],\\n    tokenIds: [\'5\', \'1245\'],\\n    transactionHashes: [\\n      \'0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a\',\\n      \'0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9\'\\n    ],\\n    blockNumbers: [18685487, 3245]\\n  }\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/transactions/search\\"\\nquerystring = {\\"perPage\\":\\"10\\",\\"page\\":\\"2\\"}\\npayload = {\\n    \\"from\\": [\\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"],\\n    \\"to\\": [\\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"],\\n    \\"chainIds\\": [1, 5, 137],\\n    \\"fromTimestamp\\": \\"2022-10-25T13:36:45+02:00\\",\\n    \\"toTimestamp\\": \\"2023-10-26T13:36:45+02:00\\",\\n    \\"assetTypes\\": [\\"token\\", \\"native\\"],\\n    \\"contractAddresses\\": [\\"0xfaff15c6cdaca61a4f87d329689293e07c98f578\\"],\\n    \\"tokenIds\\": [\\"5\\", \\"1245\\"],\\n    \\"transactionHashes\\": [\\"0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a\\", \\"0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9\\"],\\n    \\"blockNumbers\\": [18685487, 3245]\\n}\\nheaders = {\\n    \\"Content-Type\\": \\"application/json\\",\\n    \\"X-Api-Key\\": \\"<APIKEY>\\"\\n}\\nresponse = requests.request(\\"POST\\", url, json=payload, headers=headers, params=querystring)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/defi-data":{"post":{"summary":"Get Positions / Get Profits","description":"A JSON-RPC endpoint that supports two distinct methods:\\n  - **Get Positions**: Get a structured overview of the open DeFi positions linked to the specified address, at current time or at specific past block. In the JSON body, use `{ \\"method\\": \\"positions\\", ... }`.\\n  - **Get Profits**: Get a structured overview of performance (%) and USD profits of the specified address\' DeFi positions, at current time or at specific past block. In the JSON body, use `{ \\"method\\": \\"profits\\", ... }`. \\n\\nThe information is provided from a routinely refreshed cache. To insistently retrieve the most recent data, include the flag `{ \\"ignoreCache\\": true }`.\\n","operationId":"GetDefiDataInstitutional","tags":["DeFi"],"requestBody":{"$ref":"#/components/requestBodies/GetDefiDataInstitutionalBody"},"responses":{"200":{"$ref":"#/components/responses/DefiDataResponse"},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request POST \\\\\\n  --url https://api.metamask-institutional.io/defi-data \\\\\\n  --header \'Content-Type: application/json\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\' \\\\\\n  --data \'{\\n  \\"method\\": \\"positions\\",\\n  \\"params\\": {\\n    \\"userAddress\\": \\"0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781\\"\\n  }\\n}\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'POST\',\\n  url: \'https://api.metamask-institutional.io/defi-data\',\\n  headers: {\\n    \'Content-Type\': \'application/json\',\\n    \'X-Api-Key\': \'<APIKEY>\'\\n  },\\n  data: {\\n    method: \'positions\',\\n    params: {userAddress: \'0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781\'}\\n  }\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/defi-data\\"\\npayload = {\\n    \\"method\\": \\"positions\\",\\n    \\"params\\": {\\"userAddress\\": \\"0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781\\"}\\n}\\nheaders = {\\n    \\"Content-Type\\": \\"application/json\\",\\n    \\"X-Api-Key\\": \\"<APIKEY>\\"\\n}\\nresponse = requests.request(\\"POST\\", url, json=payload, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/docs":{"x-amazon-apigateway-any-method":{"x-amazon-apigateway-integration":{"uri":"https://consensys-vertical-apps.github.io/mmi-api-gateway/docs/","passthroughBehavior":"when_no_match","httpMethod":"ANY","type":"http_proxy"}}}},"components":{"requestBodies":{"GetDefiDataInstitutionalBody":{"required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/GetPositionsInstitutionalRpcRequest"},{"$ref":"#/components/schemas/GetProfitsInstitutionalRpcRequest"}]}}}}},"schemas":{"SearchTransactionsBodyDto":{"type":"object","properties":{"from":{"example":["0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea"],"description":"Source addresses","type":"array","items":{"type":"string"}},"to":{"example":["0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea"],"description":"Destination addresses","type":"array","items":{"type":"string"}},"chainIds":{"example":[1,5,137],"description":"List of chain IDs where to search the transactions in. \\n        Supported chain IDs are:\\n        <ul>\\n            <li>avalanche: <code>43114</code></li><li>arbitrum: <code>42161</code></li><li>aurora: <code>1313161554</code></li><li>bsc: <code>56</code></li><li>celo: <code>42220</code></li><li>cronos: <code>25</code></li><li>fantom: <code>250</code></li><li>ethereum: <code>1</code></li><li>moonbeam: <code>1284</code></li><li>moonriver: <code>1285</code></li><li>optimism: <code>10</code></li><li>polygon: <code>137</code></li><li>base: <code>8453</code></li>\\n        </ul>\\n       ","type":"array","items":{"type":"number"}},"fromTimestamp":{"type":"string","description":"The start date and time for the range of transactions to retrieve, formatted as an ISO 8601 string.","example":"2022-10-25T13:36:45+02:00"},"toTimestamp":{"type":"string","description":"The end date and time for the range of transactions to retrieve, formatted as an ISO 8601 string.","example":"2023-10-26T13:36:45+02:00"},"assetTypes":{"type":"array","example":["token","native"],"description":"Leave empty to retrieve all types of assets supported by the chain. Or specify the list of desired asset types.","items":{"type":"string","enum":["native","token","nft"]}},"contractAddresses":{"example":["0xfaff15c6cdaca61a4f87d329689293e07c98f578"],"description":"Limit the results to transfers of tokens with contract address in the list.","type":"array","items":{"type":"string"}},"tokenIds":{"example":["5","1245"],"description":"Limit the results to transfers of NFTs token ID in the list.","type":"array","items":{"type":"string"}},"transactionHashes":{"example":["0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a","0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9"],"description":"Limit the results to transactions with a hash in the list.","type":"array","items":{"type":"string"}},"blockNumbers":{"example":[18685487,3245],"description":"Limit the results to transactions included in the defined blocks numbers.","type":"array","items":{"type":"number"}}}},"TransferDto":{"type":"object","properties":{"chainId":{"type":"number","description":"Decimal ID of the chain where the transaction happened.","example":1},"hash":{"type":"string","description":"Hash of the transaction.","example":"0xe3852b9c47f651395d4d6a8f517c6f2f6ecb44445684fc32ef08155bacb62c68"},"transactionIndex":{"type":"number","description":"Integer of the transaction index position in the block.","example":14},"blockNumber":{"type":"number","description":"Block number where this transaction was in.","example":14732481},"blockHash":{"type":"string","description":"Hash of the block where this transaction was in.","example":"0x88b44988a25ce40d55c1a621e3ff9c86504fa3878489f4bbd88af8a6c88fe0e6"},"timestamp":{"format":"date-time","type":"string","description":"Unix timestamp in seconds of the block this transaction was in."},"nonce":{"type":"number","description":"The number of transactions made by the sender prior to this one.","example":457},"from":{"type":"string","description":"Address of the sender.","example":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea"},"to":{"type":"string","description":"Address of the receiver.","example":"0x8d203862455269aa79e2d5b7974d0816673f4e2c"},"value":{"type":"string","description":"Value transferred in Wei.","example":"81689008581039686"},"gas":{"type":"string","description":"Gas provided by the sender.","example":"31000"},"gasPrice":{"type":"string","example":"1000000000","description":"Gas price provided by the sender in Wei."},"isError":{"type":"boolean","description":"Whether it was successfull or rejected/cancelled.","example":true},"input":{"type":"string","description":"The data send along with the transaction.","example":"0x"},"contractAddress":{"type":"string","description":"Address of the token\'s contract, in case of a token transfer.","example":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"cumulativeGasUsed":{"type":"string","description":"The total amount of gas used when the transaction was executed in the block. It is cumulative because it includes the gas used by all preceding transactions in the block.","example":"1086011"},"gasUsed":{"type":"string","description":"The amount of gas that was used by this specific transaction.","example":"21000"},"confirmations":{"type":"number","description":"The number of blocks in the blockchain that have been confirmed and added after the block that this transaction is part of. A higher number of confirmations indicates a greater assurance that the transaction is final, as it means more blocks have been added after it.","example":4382},"methodId":{"type":"string","description":"The contract identifier for the function that was called in this transaction. It is derived from the first 4 bytes of the Keccak (SHA-3) hash of the ASCII form of the function signature.","example":"0x095ea7b3"},"functionName":{"type":"string","description":"The human-readable name of the function that was called in this transaction. It includes the function name and its parameters.","example":"approve(address _spender, uint256 _value)"},"assetType":{"type":"string","enum":["native","token","nft"],"description":"Type of asset being transacted."},"notes":{"type":"string","description":"This field contains any additional comments or notes that the user included when signing the transaction through the custodian. It provides context or details about the transaction that may be relevant for record-keeping or auditing purposes.","example":"Payment for services rendered"},"direction":{"type":"string","readOnly":true,"enum":["incoming","outgoing","internal"],"example":"incoming"},"nativeTokenPriceUsd":{"type":"number","description":"Price in US dollars of the chain\'s native token at the time of the transaction.","example":1600},"fee":{"type":"string","description":"Fee in Wei that the transaction cost. Is equal to `gasUsed * gasPrice`.","example":"31000000000000"},"feeUsd":{"type":"string","description":"Fee in US dollars that the transaction cost, using the price in US dollars of the chain\'s native token at the time of the transaction. Is equal to `gasUsed * gasPrice * nativeTokenPriceUsd`.","example":"0.11"},"category":{"type":"string","description":"Categorizes the type of transaction or operation. The categories cover a wide range of activities in the Ethereum ecosystem, including different types of exchanges (like 0x, 1inch), lending platforms (like Aave, Compound), domain name services (like ENS), and more. Each category represents a specific type of operation or interaction with a specific protocol or service.","enum":["0X_V3_EXCHANGE","1INCH_EXCHANGE","1INCH_V3_EXCHANGE","AAVE_BORROW","AAVE_DEPOSIT","AAVE_REPAY","AAVE_WITHDRAW","ARBITRUM_BRIDGE_IN","ARBITRUM_BRIDGE_OUT","BALANCER_CLAIM","BALANCER_DEPOSIT","BALANCER_EXCHANGE","BALANCER_WITHDRAW","COMPOUND_CLAIM","COMPOUND_V2_BORROW","COMPOUND_V2_DEPOSIT","COMPOUND_V2_REPAY","COMPOUND_V2_WITHDRAW","DAPPNODE_CLAIM","DEX_AG_EXCHANGE","ENS_CLAIM","ENS_DOMAIN_REGISTER","ENS_DOMAIN_RENEW","ENS_DOMAIN_RESOLVER_SET","ENS_DOMAIN_TRANSFER","ERC_20_APPROVE","ERC_20_MINT","ERC_20_TRANSFER","ERC_721_APPROVE","ERC_721_MINT","ERC_721_TRANSFER","ETHERMINE_MINING_PAYOUT","FUTURESWAP_GOVERNANCE_VOTE","GITCOIN_CLAIM","GNOSIS_SAFE_APPROVE_TX","GNOSIS_SAFE_WITHDRAW","IDEX_DEPOSIT_ETH","IDEX_DEPOSIT_TOKEN","IDEX_WITHDRAW","KYBER_EXCHANGE","METAMASK_V1_BRIDGE_OUT","METAMASK_V1_EXCHANGE","METAMASK_STAKE_V1","MININGPOOLHUB_MINING_PAYOUT","OPENSEA_CANCEL_ORDER","OPENSEA_EXCHANGE","OPENSEA_REGISTER","PARASWAP_V4_EXCHANGE","POLYGON_BRIDGE_IN","POLYGON_BRIDGE_OUT","POOLTOGETHER_CLAIM","POOLTOGETHER_DEPOSIT","POOLTOGETHER_WITHDRAW","SHAPESHIFT_CLAIM","SPARKPOOL_MINING_PAYOUT","SUSHISWAP_DEPOSIT","SUSHISWAP_EXCHANGE","SUSHISWAP_WITHDRAW","TORNADO_CASH_V1_DEPOSIT","TORNADO_CASH_V1_WITHDRAW","TO_0X_EXCHANGE_PROXY","TO_1INCH_V3_EXCHANGE_PROXY","TO_ARBITRUM_INBOX","TO_ARBITRUM_OUTBOX","TO_BALANCER_DISTRIBUTOR","TO_COMPOUND_COMPTROLLER","TO_DAPPNODE_DISTRIBUTOR","TO_ENS_REGISTRAR","TO_ENS_TOKEN_CONTRACT","TO_FOX_DISTRIBUTOR","TO_FUTURESWAP_GOVERNANCE","TO_GITCOIN_DISTRIBUTOR","TO_METAMASK_BRIDGE_V1","TO_METAMASK_STAKE_V1","TO_METAMASK_V1_ROUTER","TO_OPENSEA_REGISTRY","TO_OPENSEA_ROUTER","TO_PARASWAP_V4_EXCHANGE_PROXY","TO_POLYGON_BRIDGE","TO_POOLTOGETHER_DISTRIBUTOR","TO_SUSHISWAP_ROUTER","TO_UNISWAP_DISTRIBUTOR","TO_UNISWAP_V2_ROUTER","TO_UNISWAP_V3_ROUTER","UNISWAP_CLAIM","UNISWAP_V1_DEPOSIT","UNISWAP_V1_EXCHANGE","UNISWAP_V1_WITHDRAW","UNISWAP_V2_DEPOSIT","UNISWAP_V2_EXCHANGE","UNISWAP_V2_WITHDRAW","UNISWAP_V3_DEPOSIT","UNISWAP_V3_EXCHANGE","UNISWAP_V3_WITHDRAW","WETH_UNWRAP","WETH_WRAP"]},"userCategory":{"type":"string","example":"swap"},"tokenName":{"type":"string","description":"Name of the token/NFT, in case of a transfer.","example":"PepeCoin"},"tokenSymbol":{"type":"string","description":"Symbol of the token/NFT, in case of a transfer.","example":"PEPE"},"tokenIconUrl":{"type":"string","description":"URL of the token/NFT icone, in case of a transfer.","example":"https://s3.metamask-institutional.io/tokens/pepe.png"},"tokenDecimals":{"type":"number","description":"The number of decimal places that the token can be divided into.","example":18},"tokenPriceInNativeToken":{"type":"number","description":"The current price of the token in terms of the chain\'s native token (for instance Ether for Ethereum mainnnet).","example":200},"tokenPriceUsd":{"type":"number","description":"The current price of the token in terms of US dollars.","example":0.16},"nftCollectionName":{"type":"string","description":"The name of the collection to which the NFT belongs.","example":"The Merge: Regenesis"},"nftCollectionIconUrl":{"type":"string","description":"The URL of the icon or image associated with the NFT collection.","example":"https://img-hester.xyz/metadata.json"},"nftCollectionTokenId":{"type":"string","description":"The unique identifier of the token within its NFT collection. This ID is unique within the specific collection and is used to reference the individual NFT.","example":"1"}},"required":["chainId","hash","transactionIndex","blockNumber","blockHash","timestamp","nonce","from","to","value","gas","gasPrice","isError","input","contractAddress","cumulativeGasUsed","gasUsed","confirmations","methodId","functionName","assetType","notes","direction","nativeTokenPriceUsd","fee","feeUsd","category","userCategory","tokenName","tokenSymbol","tokenIconUrl","tokenDecimals","tokenPriceInNativeToken","tokenPriceUsd","nftCollectionName","nftCollectionIconUrl","nftCollectionTokenId"]},"PaginatedCustomerSnapshotsDto":{"type":"object","properties":{"meta":{"description":"Metadata about the current page.","allOf":[{"type":"object","properties":{"totalItems":{"type":"number","description":"Total number of results.","example":1000},"itemsPerPage":{"type":"number","description":"The number of results per page.","example":50},"totalPages":{"type":"number","description":"Total number of pages.","example":20},"currentPage":{"type":"number","description":"Index of the current page.","example":1}},"required":["totalItems","itemsPerPage","totalPages","currentPage"]}]},"links":{"description":"Hyperlinks that direct to the first, previous, next, and last pages.","allOf":[{"type":"object","properties":{"first":{"type":"string","readOnly":true},"previous":{"type":"string","readOnly":true},"current":{"type":"string","readOnly":true},"next":{"type":"string","readOnly":true},"last":{"type":"string","readOnly":true}},"required":["first","previous","current","next","last"]}]},"items":{"description":"The array of snapshot IDs for the current page.","type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"String identifying uniquely the resource."},"createdAt":{"format":"date-time","type":"string","description":"Date when the resource was created."},"updatedAt":{"format":"date-time","type":"string","description":"Date when the resource was last updated."},"customerId":{"type":"string","description":"String identifying uniquely the customer to whom the snapshot belongs.","example":"org_XYZ"}},"required":["id","createdAt","updatedAt","customerId"]}}},"required":["meta","links","items"]},"GetCustomerSnapshotResponseDto":{"type":"object","properties":{"id":{"type":"string","description":"String identifying uniquely the snapshot.","example":"b75b3fb7-bcee-4a44-ab71-3c7929055d62"},"createdAt":{"type":"string","description":"Date when the resource was created.","example":"2023-01-10T22:45:03.984Z"},"customer":{"description":"Details about the customer who owns the snapshot.","example":{"name":"Digital Asset Ventures"},"allOf":[{"type":"object","properties":{}}]},"addresses":{"description":"All Ethereum addresses that the snapshot covers.","example":["0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","0xe1ed4da4284924ddaf69983b4d813fb1be58c380","0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113"],"type":"array","items":{"type":"string"}},"data":{"description":"Detailed token balances, DeFi positions and NFT collections.","example":{"tokenBalances":[{"accountAddress":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","object":"token","chainId":137,"address":"0x0000000000000000000000000000000000000000","name":"MATIC","symbol":"MATIC","iconUrl":"https://static.debank.com/image/matic_token/logo_url/matic/e5a8a2860ba5cf740a474dcab796dc63.png","balance":{"s":1,"e":0,"c":[2,773993984042,60000000000000]},"value":{"price":0.57502,"marketCap":4605170634,"currency":"","amount":{"s":1,"e":0,"c":[0]},"priceChange1d":0.0283392,"pricePercentChange1h":-0.014860763935671727,"pricePercentChange1d":5.183862280233577,"pricePercentChange7d":16.667763767157503,"pricePercentChange14d":8.032487931016316,"pricePercentChange30d":6.801836354029829,"pricePercentChange200d":-78.51929372527474,"pricePercentChange1y":-44.95235985437751}},{"accountAddress":"0xe1ed4da4284924ddaf69983b4d813fb1be58c380","object":"token","chainId":1,"address":"0x429881672b9ae42b8eba0e26cd9c73711b891ca5","name":"PickleToken","symbol":"PICKLE","iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x429881672b9ae42b8eba0e26cd9c73711b891ca5/2b7b9d9e339bbaac086bdaf663b0072a.png","balance":{"s":1,"e":-1,"c":[60758586975942,17000000000000]},"value":{"currency":"","amount":{"s":1,"e":0,"c":[0]},"price":1.16,"marketCap":961949,"priceChange1d":-0.047645675804809606,"pricePercentChange1h":-0.4363861738988935,"pricePercentChange1d":-3.946458599906334,"pricePercentChange7d":-6.607414201212489,"pricePercentChange14d":-5.4487660945915035,"pricePercentChange30d":-10.826075037454212,"pricePercentChange200d":-83.65775330866767,"pricePercentChange1y":-84.1952967359055}},{"accountAddress":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","object":"token","chainId":1,"address":"0x4575f41308ec1483f3d399aa9a2826d74da13deb","name":"Orchid","symbol":"OXT","iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x4575f41308ec1483f3d399aa9a2826d74da13deb/3180aed0a0777c4e34f20966e90b41d5.png","balance":{"s":1,"e":-1,"c":[82345767000000]},"value":{"price":0.09934,"marketCap":58744249,"currency":"","amount":{"s":1,"e":0,"c":[0]},"priceChange1d":-0.006029810783972425,"pricePercentChange1h":-0.05330237010265641,"pricePercentChange1d":-5.722522759347138,"pricePercentChange7d":-5.785688481107546,"pricePercentChange14d":-6.495645055923138,"pricePercentChange30d":-10.760887619117135,"pricePercentChange200d":-74.48792790941388,"pricePercentChange1y":-69.85086950365066}}],"defiPositions":{"data":[{"name":"Aave V2","protocolType":"Lending & Borrowing","protocolId":"aave2","description":"No description","siteUrl":"https://app.aave.com","iconUrl":"https://static.debank.com/image/project/logo_url/aave2/b8d1ef85570855176b102edf8cda6f8d.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":1.852,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/aave2/0x0000000000000000000000000000000000000000","object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001013841251048857,"underlying":[{"object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001013841251048857,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":1.852}],"marketValue":1.852}],"borrow":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/aave2/0x0000000000000000000000000000000000000000","object":"Asset","name":"USDC","address":"0x0000000000000000000000000000000000000000","symbol":"USDC","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.1,"underlying":[{"object":"Asset","name":"USDC","address":"0x0000000000000000000000000000000000000000","symbol":"USDC","decimals":6,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":10,"value":{"id":"usdc","price":1,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":10}],"marketValue":10}],"borrowMarketValue":10},{"name":"Balancer V2","protocolType":"Liquidity Provision","protocolId":"balancer2","description":"No description","siteUrl":"https://balancer.finance","iconUrl":"https://static.debank.com/image/project/logo_url/balancer2/4318f98916b139a44996fc06531e9074.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":17.81922,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/balancer2/0x5c6ee304399dbdb9c8ef030ab642b10820db8f56","object":"Asset","name":"Balancer / ETH","address":"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56","symbol":"Balancer / ETH","marketValue":17.81922,"underlying":[{"object":"Token","name":"Balancer","address":"0xba100000625a3754423978a60c9317c58a424e3d","symbol":"BAL","decimals":18,"iconUrl":"https://static.debank.com/image/eth_token/logo_url/0xba100000625a3754423978a60c9317c58a424e3d/52990c207f4001bd9090dfd90e54374a.png","balance":4.0113145919184445,"value":{"id":"balancer","price":3.56,"marketCap":156600162,"allTimeHigh":74.45,"allTimeLow":2.92,"totalVolume":11016314,"high1d":3.65,"low1d":3.32,"circulatingSupply":43985024.5346548,"dilutedMarketCap":213461781,"marketCapPercentChange1d":6.31865,"priceChange1d":0.210766,"pricePercentChange1h":-0.2647810175656602,"pricePercentChange1d":6.287970211765563,"pricePercentChange7d":4.327153284450219,"pricePercentChange14d":20.393137002390816,"pricePercentChange30d":6.8593701924506405,"pricePercentChange200d":-50.492156864972394,"pricePercentChange1y":-46.54452175381557},"marketValue":14.28026},{"object":"Token","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.0019332527759715326,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":3.53896}]}],"borrow":[],"borrowMarketValue":0},{"name":"LIDO","protocolType":"Staked","protocolId":"lido","description":"No description","siteUrl":"https://stake.lido.fi","iconUrl":"https://static.debank.com/image/project/logo_url/lido/081388ebc44fa042561749bd5338d49e.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":1.87033,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/lido/0x0000000000000000000000000000000000000000","object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001021713285676878,"underlying":[{"object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001021713285676878,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":1.87033}],"marketValue":1.87033}]},{"name":"Uniswap V3","protocolType":"Liquidity Provision","protocolId":"uniswap3","description":"No description","siteUrl":"https://app.uniswap.org","iconUrl":"https://static.debank.com/image/project/logo_url/uniswap3/87a541b3b83b041c8d12119e5a0d19f0.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":70.26603,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/uniswap3-124771/0x1d42064fc4beb5f8aaf85f4617ae8b3b5b8bd801","object":"Asset","name":"Uniswap / ETH","address":"0x1d42064fc4beb5f8aaf85f4617ae8b3b5b8bd801","symbol":"Uniswap / ETH","marketValue":70.26603,"underlying":[{"object":"Token","name":"Uniswap","address":"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984","symbol":"UNI","decimals":18,"iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984/fcee0c46fc9864f48ce6a40ed1cdd135.png","balance":15.046257965830597,"value":{"id":"uniswap","price":4.67,"marketCap":3505812982,"allTimeHigh":44.92,"allTimeLow":1.03,"totalVolume":892819656,"high1d":4.89,"low1d":4.03,"circulatingSupply":753766667,"dilutedMarketCap":4651058657,"marketCapPercentChange1d":13.47024,"priceChange1d":0.584025,"pricePercentChange1h":1.1202531695004518,"pricePercentChange1d":14.28286679697393,"pricePercentChange7d":9.891734785320672,"pricePercentChange14d":19.24163775962673,"pricePercentChange30d":3.7556879912983074,"pricePercentChange200d":-25.099628455591912,"pricePercentChange1y":-33.56555916912446},"marketValue":70.26603},{"object":"Token","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":0}]}],"borrow":[],"borrowMarketValue":0},{"name":"Uniswap V3","protocolType":"Rewards","protocolId":"uniswap3","description":"No description","siteUrl":"https://app.uniswap.org","iconUrl":"https://static.debank.com/image/project/logo_url/uniswap3/87a541b3b83b041c8d12119e5a0d19f0.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":4.07081,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/uniswap3/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984","object":"Asset","name":"Uniswap","address":"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984","symbol":"UNI","decimals":18,"iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984/fcee0c46fc9864f48ce6a40ed1cdd135.png","balance":0.8762154536568376,"value":{"price":4.645881421181949},"underlying":[],"marketValue":4.07081}]},{"name":"Uniswap V3","protocolType":"Rewards","protocolId":"uniswap3","description":"No description","siteUrl":"https://app.uniswap.org","iconUrl":"https://static.debank.com/image/project/logo_url/uniswap3/87a541b3b83b041c8d12119e5a0d19f0.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":10.36386,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/uniswap3/0x0000000000000000000000000000000000000000","object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.005659640837326489,"value":{"price":1831.07},"underlying":[],"marketValue":10.36386}]}]},"nftCollections":[{"accountAddress":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","chainId":1,"name":"Ethereum Name Service","imageUrl":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","marketValue":5.371279017540634,"nativeToken":{"price":1332.83,"symbol":"ETH"},"floorPrice":{"lowest":0.00005179274,"looksrare":0.001,"opensea":0.00005179274},"nfts":[{"id":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea/1/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","tokenId":"62461024984783631771844942940378063341359937594037117814829513143102666032471","symbol":"ENS","metadata":{"is_normalized":true,"name":"defiportal.eth","description":"defiportal.eth, an ENS name.","attributes":[{"trait_type":"Created Date","display_type":"date","value":""},{"trait_type":"Length","display_type":"number","value":10},{"trait_type":"Registration Date","display_type":"date","value":1615047822000},{"trait_type":"Expiration Date","display_type":"date","value":1646604774000}],"name_length":10,"url":"https://app.ens.domains/name/defiportal.eth","version":0,"background_image":"https://metadata.ens.domains/mainnet/avatar/defiportal.eth","image_url":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/0x8a17aff4849bbeac92762df87007630c9bddf2af2f84d9be20e552586dedc557/image"},"estimatedPrice":{"value":0,"usd":0},"attribution":{"oat":{"value":0.00154,"usd":2.0525582},"1d":{"value":0.00154,"usd":2.0525582},"1w":{"value":0.00154,"usd":2.0525582},"1m":{"value":0.00154,"usd":2.0525582}},"transaction":{"value":0.00349,"usd":5.371279017540634,"symbol":"ETH","date":"2021-03-06T16:23:42.000Z","hash":"0x5f5dfe40dbef0d7bd8792852756d6ce0c671d6c0cc64cb5d64e0f2845b388d3a","amount":1}}]},{"accountAddress":"0xe1ed4da4284924ddaf69983b4d813fb1be58c380","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","chainId":1,"name":"Ethereum Name Service","imageUrl":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","marketValue":5.371279017540634,"nativeToken":{"price":1332.83,"symbol":"ETH"},"floorPrice":{"lowest":0.00005179274,"looksrare":0.001,"opensea":0.00005179274},"nfts":[{"id":"0xe1ed4da4284924ddaf69983b4d813fb1be58c380/1/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","tokenId":"62461024984783631771844942940378063341359937594037117814829513143102666032471","symbol":"ENS","metadata":{"is_normalized":true,"name":"hello.eth","description":"defiportal.eth, an ENS name.","attributes":[{"trait_type":"Created Date","display_type":"date","value":""},{"trait_type":"Length","display_type":"number","value":10},{"trait_type":"Registration Date","display_type":"date","value":1615047822000},{"trait_type":"Expiration Date","display_type":"date","value":1646604774000}],"name_length":10,"url":"https://app.ens.domains/name/defiportal.eth","version":0,"background_image":"https://metadata.ens.domains/mainnet/avatar/defiportal.eth","image_url":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/0x8a17aff4849bbeac92762df87007630c9bddf2af2f84d9be20e552586dedc557/image"},"estimatedPrice":{"value":0,"usd":0},"attribution":{"oat":{"value":0.00154,"usd":2.0525582},"1d":{"value":0.00154,"usd":2.0525582},"1w":{"value":0.00154,"usd":2.0525582},"1m":{"value":0.00154,"usd":2.0525582}},"transaction":{"value":0.00349,"usd":5.371279017540634,"symbol":"ETH","date":"2021-03-06T16:23:42.000Z","hash":"0x5f5dfe40dbef0d7bd8792852756d6ce0c671d6c0cc64cb5d64e0f2845b388d3a","amount":1}}]}]},"allOf":[{"type":"object","properties":{}}]}},"required":["id","createdAt","customer","addresses","data"]},"CustomerAudDto":{"type":"object","properties":{"total":{"type":"number","description":"The total dollar value of the portfolio. Is equal to `tokenBalances + deFiPositions + nftCollections`.","minimum":0},"tokenBalances":{"type":"number","description":"The dollar value of any token assets.","minimum":0},"deFiPositions":{"type":"number","description":"The dollar value of any DeFi assets (less the dollar value of any DeFi debts), dollar value of any rewards or other accruals, and the dollar value of staking positions and staking rewards.","minimum":0},"nftCollections":{"type":"number","description":"The dollar value of NFT floor prices.","minimum":0}},"required":["total","tokenBalances","deFiPositions","nftCollections"]},"Chain":{"type":"number","enum":[1,10,56,137,250,8453,42161,43114,59144],"description":"IDs of supported EVM chains"},"ChainIdToBlockNumberMap":{"type":"object","description":"Instead of current values, return the values as they were historically at given block numbers on given chains.","properties":{"1":{"type":"integer","format":"int32","example":18982865,"description":"Ethereum Mainnet"},"10":{"type":"integer","format":"int32","example":114683740,"description":"OP Mainnet"},"56":{"type":"integer","format":"int32","example":35147795,"description":"BNB Smart Chain Mainnet"},"137":{"type":"integer","format":"int32","example":52193595,"description":"Polygon Mainnet"},"250":{"type":"integer","format":"int32","example":74064840,"description":"Fantom Opera"},"8453":{"type":"integer","format":"int32","example":9088502,"description":"Base"},"42161":{"type":"integer","format":"int32","example":169326747,"description":"Arbitrum One"},"43114":{"type":"integer","format":"int32","example":12885796,"description":"Avalanche C-Chain"},"59144":{"type":"integer","format":"int32","example":1609374,"description":"Linea"}}},"DefiData":{"type":"object","required":["createdAt","updatedAt","data"],"properties":{"createdAt":{"type":"string","format":"date-time","example":"2024-01-12T08:25:56.455Z"},"updatedAt":{"type":"string","format":"date-time","example":"2024-01-12T08:25:56.455Z"},"data":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/Position"}},{"type":"array","items":{"$ref":"#/components/schemas/Profit"}}]}}},"Eth1Address":{"type":"string","description":"An ethereum 1 address. 20-bytes, hex encoded with 0x prefix, case insensitive.","example":"0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781","pattern":"^0x[a-fA-F0-9]{40}$"},"GetPositionsInstitutionalRpcRequest":{"allOf":[{"$ref":"#/components/schemas/GetPositionsRpcRequest"},{"$ref":"#/components/schemas/IgnoreCache"}]},"GetPositionsRpcRequest":{"allOf":[{"$ref":"#/components/schemas/RpcRequest"},{"type":"object","properties":{"method":{"type":"string","enum":["positions"],"description":"The JSON-RPC method. Must be \\"positions\\"."},"params":{"$ref":"#/components/schemas/GetPositionsRpcRequestParams"}},"required":["method","params"]}]},"GetPositionsRpcRequestParams":{"type":"object","properties":{"userAddress":{"$ref":"#/components/schemas/Eth1Address"},"filterProtocolIds":{"type":"array","description":"Limit the results to positions on the passed list of DeFi protocols.","items":{"$ref":"#/components/schemas/Protocol"}},"filterChainIds":{"type":"array","description":"Limit the results to positions on the passed list of chains.","items":{"$ref":"#/components/schemas/Chain"}},"blockNumbers":{"$ref":"#/components/schemas/ChainIdToBlockNumberMap"},"filterProtocolTokens":{"type":"array","example":["0x9ff58f4ffb29fa2266ab25e75e2a8b3503311656"],"description":"Limit the results to positions on the passed list of LP tokens.","items":{"$ref":"#/components/schemas/Eth1Address"}}},"required":["userAddress"]},"GetProfitsInstitutionalRpcRequest":{"allOf":[{"$ref":"#/components/schemas/GetProfitsRpcRequest"},{"$ref":"#/components/schemas/IgnoreCache"}]},"GetProfitsRpcRequest":{"allOf":[{"$ref":"#/components/schemas/RpcRequest"},{"type":"object","properties":{"method":{"type":"string","enum":["profits"],"description":"The JSON-RPC method. Must be \\"profits\\"."},"params":{"$ref":"#/components/schemas/GetProfitsRpcRequestParams"}},"required":["method","params"]}]},"GetProfitsRpcRequestParams":{"type":"object","properties":{"userAddress":{"$ref":"#/components/schemas/Eth1Address"},"timePeriod":{"$ref":"#/components/schemas/TimePeriod"},"filterProtocolIds":{"type":"array","items":{"$ref":"#/components/schemas/Protocol"}},"filterChainIds":{"type":"array","items":{"$ref":"#/components/schemas/Chain"}},"toBlockNumbersOverride":{"$ref":"#/components/schemas/ChainIdToBlockNumberMap"},"filterProtocolTokens":{"type":"array","example":["0x9ff58f4ffb29fa2266ab25e75e2a8b3503311656"],"description":"Limit the results to profits on the passed list of LP tokens.","items":{"$ref":"#/components/schemas/Eth1Address"}}},"required":["userAddress","timePeriod"]},"IgnoreCache":{"type":"object","properties":{"ignoreCache":{"type":"boolean","default":false,"description":"Optionally set this flag to `true` to insistently retrieve the most recent data instead of cached data."}}},"Position":{"type":"object","properties":{"protocolId":{"type":"string","description":"Identifier of the DeFi protocol.","example":"aave-v2"},"name":{"type":"string","description":"Display name of the protocol.","example":"Aave V2"},"description":{"type":"string","description":"Brief description of the protocol adapter.","example":"Aave V2 is a decentralized non-custodial money market protocol."},"siteUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s website.","example":"https://aave.com/"},"iconUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s icon.","example":"https://aave.com/favicon.ico"},"positionType":{"$ref":"#/components/schemas/PositionType"},"chainId":{"type":"integer","description":"Blockchain ID where the protocol operates (e.g., 1, 10, 56).","example":1},"productId":{"type":"string","description":"Identifier for the specific product within the protocol.","example":"aave-v2-product-1"},"success":{"type":"boolean","description":"Boolean indicating if the query was successful.","example":true},"tokens":{"type":"array","description":"An array of token objects, detailing each token\'s information like address, name, symbol, balance, and nested token details.","items":{"$ref":"#/components/schemas/Token"}},"error":{"type":"object","description":"Present in the second item if success is false, providing an error message and details."}},"required":["protocolId","name","description","siteUrl","iconUrl","positionType","chainId","productId","success","tokens"]},"PositionType":{"type":"string","enum":["supply","lend","borrow","stake","reward","fiat-prices"],"example":"lend","description":"Type of position. It can be one of the following:\\n  - `supply`: Liquidity position e.g. a dex pool\\n  - `lend`: Providing liquidity to a lending and borrow protocol\\n  - `borrow`: Getting a loan from a lending and borrow protocol\\n  - `stake`: Staking a token e.g. staking eth or staking an lp token\\n  - `reward`: Claimable rewards, these type of positions will be merged with the equivalent lp position\\n  - `fiat-prices`: Fiat prices\\n"},"Profit":{"type":"object","properties":{"protocolId":{"type":"string","description":"Identifier of the DeFi protocol.","example":"compound"},"name":{"type":"string","description":"Display name of the protocol.","example":"Compound"},"description":{"type":"string","description":"Brief description of the protocol adapter.","example":"Compound is a decentralized, blockchain-based protocol that allows you to lend and borrow cryptocurrencies."},"siteUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s website.","example":"https://compound.finance/"},"iconUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s icon.","example":"https://compound.finance/images/compound-logo.svg"},"positionType":{"$ref":"#/components/schemas/PositionType"},"chainId":{"type":"integer","description":"Blockchain ID where the protocol operates (e.g., 1, 10, 56).","example":1},"productId":{"type":"string","description":"Identifier for the specific product within the protocol.","example":"pool"},"success":{"type":"boolean","description":"Boolean indicating if the query was successful.","example":true},"tokens":{"type":"array","description":"An array of token objects, empty in the first item and populated in the third. For each token, details like address, name, symbol, type, profit, performance, and calculation data are provided.","items":{"$ref":"#/components/schemas/Token"}},"fromBlock":{"type":"integer","description":"Starting block for the snapshot.","example":10000000},"toBlock":{"type":"integer","description":"Ending block for the snapshot.","example":10005000},"error":{"type":"object","description":"Present in the second item if success is false, providing an error message and details."}},"required":["protocolId","name","description","siteUrl","iconUrl","positionType","chainId","productId","success","tokens","fromBlock","toBlock"]},"Protocol":{"type":"string","enum":["aave-v2","aave-v3","chimp-exchange","compound","convex","curve","gmx","iziswap","lido","maker","prices","stargate","swell","syncswap","uniswap-v3"],"description":"List of the DeFi protocols supported."},"RpcRequest":{"type":"object","required":["method","params"],"properties":{"method":{"type":"string"},"params":{"type":"object"}}},"TimePeriod":{"type":"integer","enum":[1,7,30],"description":"Specifies the time frame, in days, over which the profits are calculated. For example, a `timePeriod` of `30` would return the performance and USD profits of the user\'s DeFi positions over the past 30 days."},"Token":{"type":"object","properties":{"address":{"type":"string","description":"Blockchain address of the token.","example":"0x030ba81f1c18d280636f32af80b9aad02cf0854e"},"name":{"type":"string","description":"Name of the token.","example":"Aave interest bearing WETH"},"symbol":{"type":"string","description":"Symbol of the token.","example":"aWETH"},"decimals":{"type":"integer","description":"Decimal precision of the token.","example":18},"balanceRaw":{"type":"string","description":"Raw balance of the token.","example":"815273802661604223213"},"type":{"type":"string","enum":["protocol","claimable","underlying","underlying-claimable","fiat"],"example":"protocol","description":"Type of token"},"balance":{"type":"number","description":"Normalized balance of the token.","example":815.2738026616042},"iconUrl":{"type":"string","format":"uri","description":"URL for the token\'s icon.","example":"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},"tokens":{"type":"array","description":"Nested array for tokens within other tokens, following the same structure.","items":{"$ref":"#/components/schemas/Token"},"example":"[\\n  {\\n    \\"address\\": \\"TheUnitedStatesMint\\",\\n    \\"name\\": \\"USD\\",\\n    \\"symbol\\": \\"USD\\",\\n    \\"decimals\\": 18,\\n    \\"type\\": \\"fiat\\",\\n    \\"balanceRaw\\": \\"2116601421387500276445819\\",\\n    \\"balance\\": \\"2116601.421387500276445819\\"\\n  }\\n]\\n"}},"required":["address","name","symbol","decimals","balanceRaw","type","balance","iconUrl"]}},"responses":{"DefiDataResponse":{"description":"A structured overview of the open DeFi positions linked to a specific address, or a structured overview of performance (%) and USD profits of the specified address\' DeFi positions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DefiData"}}}},"Unauthorized":{"description":"Missing header \'X-Api-Key\'","content":{"application/json":{"example":{"statusCode":401,"message":"Unauthorized"}}}},"Forbidden":{"description":"API key invalid, expired, or no requests left","content":{"application/json":{"example":{"statusCode":403,"message":"Forbidden"}}}}},"securitySchemes":{"ApiKey":{"type":"apiKey","in":"header","name":"X-Api-Key","description":"To ensure secure access to our REST API, you need to authenticate your requests with an API key. To generate your API key, visit the page [API](https://metamask-institutional.io/api-subscription) in the dashboard. Include the API key in the header `X-Api-Key` on your HTTP requests.\\n\\nThe following example uses cURL to get a snapshot using the `GET /snapshots/{snapshotId}` endpoint:\\n\\n```bash\\ncurl --request GET \\\\\\n  --url \'https://api.metamask-institutional.io/snapshots/{snapshotId}\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n```\\n\\nYou can use any programming language:\\n\\n```js\\nimport axios from \\"axios\\";\\n\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots/{snapshotId}\',\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\n\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n```\\n\\n\\n- Do not share your API key. Treat it like a password.\\n- If you lost your API key, rotate it via the page [API](https://metamask-institutional.io/api-subscription) in the dashboard.\\n- If you believe your API key has been compromised, rotate it via the page [API](https://metamask-institutional.io/api-subscription) in the dashboard.\\n- Failure to include the API key in your requests will result in an authentication error.\\n"}}}},"bundle":{"openapi":"3.0.1","info":{"version":"v1","title":"Web API","description":"# Overview\\nThe MetaMask Institutional Web API lets you retrieve your transactions history and snapshots of your portfolio valuations, automate reporting, or build your own applications. To get started:\\n\\n1. Log in the [dashboard](https://metamask-institutional.io/)\\n2. Visit the page [API](https://metamask-institutional.io/api-subscription)\\n3. Generate your API key\\n4. Use the API key in your HTTP requests\\n\\n# Authorization\\n<SecurityDefinitions />\\n\\n# Rate Limits\\nExcessive Web API requests in a short duration may trigger a 429 error response from MetaMask Institutional, indicating that your API key has hit our rate limit. We enforce these limits to ensure the stability of our API.\\n\\nOur API rate limit is determined by the number of calls your application makes within a rolling 1-second window. Exceeding this limit will result in 429 error responses, potentially leading to unexpected behavior in your application. The limit varies based on your MetaMask Institutional subscription.\\n\\nThrottling is an effective strategy to ensure your application stays within the rate limits. It involves limiting the number of API requests your application can make in a given amount of time. This can be achieved by implementing a delay between requests or queuing requests and processing them at a fixed rate.\\n\\nThere are several libraries available that can help you implement throttling in your application:\\n- For Node.js, consider using the [Bottleneck](https://www.npmjs.com/package/bottleneck) library. It\'s a powerful, easy-to-use rate limiter that you can use to control the rate of API requests.\\n- For Python, you might want to use [ratelimiter](ratelimiter), which offers a simple and flexible rate limiting implementation.\\n- For Java, [Bucket4j](Bucket4j) is a powerful library that supports multiple rate limiting algorithms.\\n- For Ruby, [ratelimit](https://rubygems.org/gems/ratelimit/versions/0.0.6) is a straightforward rate limiter that\'s easy to integrate into any application.\\n\\nRemember, the key to successful throttling is to balance between staying within the rate limits and providing a smooth user experience.\\n\\n# Monthly Quotas\\nEach API key on the MetaMask Institutional Web API is subject to a monthly quota, which is determined by your subscription level. For example, an API key may be allocated a quota of 1,000 requests per month.\\n\\nAt the commencement of each new month, the usage count is reset to zero, providing a fresh quota for the month ahead.\\n\\nIt\'s important to note that even after reaching the monthly quota, the API key remains active. You can continue to make requests using the same API key. However, any requests beyond the quota will incur additional charges, referred to as overage fees. Please review your subscription details for information on these fees.\\n\\n# Support\\nIf you have any questions or run into any issues while using the MetaMask Institutional Web API, you can find help in the [MetaMask Institutional Help Center](https://mmi-support.zendesk.com), or [Submit a request](https://mmi-support.zendesk.com/hc/en-us/requests/new) to get in touch with our support team.\\n\\n# Legal\\nBy using MetaMask Institutional Web API, you accept the [Terms and Conditions](https://metamask-institutional.io/terms-and-conditions).\\n","termsOfService":"https://metamask-institutional.io/terms-and-conditions","contact":{"name":"Submit an issue","url":"https://mmi-support.zendesk.com/hc/en-us/requests/new"}},"servers":[{"url":"https://api.metamask-institutional.io"}],"tags":[{"name":"Snapshots","description":"Retrieve valuations of your assets at a specific time across accounts."},{"name":"Transactions","description":"The past transactions you executed through MetaMask Institutional."},{"name":"DeFi","description":"Get detailed Profit & Loss data on open DeFi positions."},{"name":"transaction_model","x-displayName":"Transaction","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/TransferDto\\" />\\n"},{"name":"position_model","x-displayName":"Position","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Position\\" />\\n"},{"name":"profit_model","x-displayName":"Profit","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Profit\\" />\\n"}],"x-tagGroups":[{"name":"General","tags":["Snapshots","Transactions","DeFi"]},{"name":"Models","tags":["transaction_model","position_model","profit_model"]}],"paths":{"/snapshots/{snapshotId}":{"get":{"tags":["Snapshots"],"summary":"Get Snapshot","description":"Get a comprehensive overview of a portfolio\'s positions and valuations at a given time. Includes token balances, DeFi positions and NFT collections. You can find your snapshot IDs using the endpoint `GET /snapshots`.","operationId":"GetSnapshotById","parameters":[{"name":"snapshotId","required":true,"in":"path","schema":{"type":"string"}},{"name":"dataType","required":false,"in":"query","description":"The data format to return.","example":"json","schema":{"enum":["json","csv"],"type":"string"}},{"name":"currency","required":false,"in":"query","description":"The currency to get the price values in.","example":"usd","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetCustomerSnapshotResponseDto"}}}},"400":{"description":"Unknown currency XYZ.","content":{"application/json":{"example":{"statusCode":400,"message":"Unknown currency xyz."}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"},"404":{"description":"Customer snapshot couldn\'t be found.","content":{"application/json":{"example":{"statusCode":404,"message":"Customer snapshot couldn\'t be found."}}}}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request GET \\\\\\n  --url \'https://api.metamask-institutional.io/snapshots/{snapshotId}?dataType=json&currency=usd\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots/{snapshotId}\',\\n  params: {dataType: \'json\', currency: \'usd\'},\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots/{snapshotId}?dataType=json&currency=usd\\"\\nheaders = {\\n    \\"X-Api-Key\\": \\"<APIKEY>\\"\\n}\\nresponse = requests.request(\\"GET\\", url, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/snapshots":{"get":{"tags":["Snapshots"],"summary":"Search Snapshot IDs","description":"Fetch a paginated list containing the IDs of snapshots associated with a specific customer, matching the search filters. The IDs can then be used to fetch the actual snapshot content with `GET /snapshots/{snapshotId}`.","operationId":"GetSnapshotIds","parameters":[{"name":"fromTimestamp","required":false,"in":"query","description":"The start date and time for the range of snapshots to retrieve, formatted as an ISO 8601 string.  <br> <br> **Depending how you run the query, you might need to URL-encode this parameter. For instance `2023-10-25T13:36:45+02:00` would become `2023-10-25T13%3A36%3A45%2B02%3A00`.**","example":"2023-10-25T13:36:45+02:00","schema":{"type":"string"}},{"name":"toTimestamp","required":false,"in":"query","description":"The end date and time for the range of snapshots to retrieve, formatted as an ISO 8601 string. <br> <br> **Depending how you run the query, you might need to URL-encode this parameter. For instance `2023-10-26T13:36:45+02:00` would become `2023-10-26T13%3A36%3A45%2B02%3A00`.**","example":"2023-10-26T13:36:45+02:00","schema":{"type":"string"}},{"name":"page","required":false,"in":"query","description":"The page number to retrieve in the paginated list of snapshots.","example":1,"schema":{"minimum":1,"type":"number"}},{"name":"perPage","required":false,"in":"query","description":"The number of snapshots to retrieve per page.","example":10,"schema":{"minimum":10,"type":"number"}},{"name":"sort","required":false,"in":"query","description":"The property to sort the snapshots by.","schema":{"enum":["createdAt","updatedAt"],"type":"string"}},{"name":"order","required":false,"in":"query","description":"The order to sort the snapshots in.","schema":{"enum":["desc","asc"],"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaginatedCustomerSnapshotsDto"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request GET \\\\\\n  --url \'https://api.metamask-institutional.io/snapshots?fromTimestamp=2023-10-25T13%3A36%3A45%2B02%3A00&toTimestamp=2023-10-26T13%3A36%3A45%2B02%3A00&page=2&perPage=10&sort=createdAt&order=asc\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots\',\\n  params: {\\n    fromTimestamp: \'2022-10-25T13:36:45+02:00\',\\n    toTimestamp: \'2023-10-26T13:36:45+02:00\',\\n    page: \'2\',\\n    perPage: \'10\',\\n    sort: \'createdAt\',\\n    order: \'asc\'\\n  },\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots\\"\\nquerystring = {\\"fromTimestamp\\":\\"2022-10-25T13:36:45+02:00\\",\\"toTimestamp\\":\\"2023-10-26T13:36:45+02:00\\",\\"page\\":\\"2\\",\\"perPage\\":\\"10\\",\\"sort\\":\\"createdAt\\",\\"order\\":\\"asc\\"}\\nheaders = {\\"X-Api-Key\\": \\"<APIKEY>\\"}\\nresponse = requests.request(\\"GET\\", url, headers=headers, params=querystring)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}},"post":{"tags":["Snapshots"],"summary":"Create Snapshot","description":"Initiate the creation of a new snapshot. Please note that the exact timing of the snapshot creation is not guaranteed. This is because the request is queued and processed asynchronously.  <br> <br> After this request responded successfully, wait some time for the snapshot to be created, and query the endpoint `GET /snapshots` to find its ID. It typically takes between a few seconds and a few minutes, depending on how busy the queue is.","operationId":"CreateSnapshot","responses":{"201":{"description":""},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request POST \\\\\\n  --url https://api.metamask-institutional.io/snapshots \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'POST\',\\n  url: \'https://api.metamask-institutional.io/snapshots\',\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots\\"\\npayload = \\"\\"\\nheaders = {\\"X-Api-Key\\": \\"<APIKEY>\\"}\\nresponse = requests.request(\\"POST\\", url, data=payload, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/snapshots/aud":{"get":{"tags":["Snapshots"],"summary":"Get Current AUD","description":"Fetch the current customer\'s portoflio valuation, in US Dollars. The valuation at the specified date is determined by valuing all assets within an address. Including, the dollar value of any token assets, NFT dollar floor prices, dollar value of any DeFi assets (less the dollar value of any DeFi debts), dollar value of any rewards or other accruals, and the dollar value of staking positions and staking rewards.","operationId":"GetSnapshotAud","responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerAudDto"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request GET \\\\\\n  --url https://api.metamask-institutional.io/snapshots/aud \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots/aud\',\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/snapshots/aud\\"\\npayload = \\"\\"\\nheaders = {\\"X-Api-Key\\": \\"<APIKEY>\\"}\\nresponse = requests.request(\\"GET\\", url, data=payload, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/transactions/search":{"post":{"summary":"Search Transactions","description":"This endpoint allows you to search through your past transactions across various blockchains, providing a powerful tool for analyzing your transaction history. You can filter transactions based on various criteria such as sender and receiver addresses, chain IDs, time range, asset types, contract addresses, token IDs, transaction hashes, and block numbers.\\n\\n**Note:** Only transactions executed through the MetaMask Institutional (MMI) extension are searchable with this endpoint.\\n","operationId":"SearchTransactions","tags":["Transactions"],"parameters":[{"name":"page","in":"query","description":"The page of results being requested","required":false,"schema":{"type":"number","default":1,"example":1}},{"name":"perPage","in":"query","description":"The number of results per page","required":false,"schema":{"type":"number","default":50,"example":50}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchTransactionsBodyDto"}}}},"responses":{"200":{"description":"A list of transactions that match the search criteria.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransferDto"}}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request POST \\\\\\n  --url \'https://api.metamask-institutional.io/transactions/search?perPage=10&page=2\' \\\\\\n  --header \'Content-Type: application/json\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\' \\\\\\n  --data \'{\\n  \\"from\\": [\\n    \\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"\\n  ],\\n  \\"to\\": [\\n    \\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"\\n  ],\\n  \\"chainIds\\": [\\n    1,\\n    5,\\n    137\\n  ],\\n  \\"fromTimestamp\\": \\"2022-10-25T13:36:45+02:00\\",\\n  \\"toTimestamp\\": \\"2023-10-26T13:36:45+02:00\\",\\n  \\"assetTypes\\": [\\n    \\"token\\",\\n    \\"native\\"\\n  ],\\n  \\"contractAddresses\\": [\\n    \\"0xfaff15c6cdaca61a4f87d329689293e07c98f578\\"\\n  ],\\n  \\"tokenIds\\": [\\n    \\"5\\",\\n    \\"1245\\"\\n  ],\\n  \\"transactionHashes\\": [\\n    \\"0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a\\",\\n    \\"0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9\\"\\n  ],\\n  \\"blockNumbers\\": [\\n    18685487,\\n    3245\\n  ]\\n}\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'POST\',\\n  url: \'https://api.metamask-institutional.io/transactions/search\',\\n  params: {perPage: \'10\', page: \'2\'},\\n  headers: {\\n    \'Content-Type\': \'application/json\',\\n    \'X-Api-Key\': \'<APIKEY>\'\\n  },\\n  data: {\\n    from: [\'0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\'],\\n    to: [\'0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\'],\\n    chainIds: [1, 5, 137],\\n    fromTimestamp: \'2022-10-25T13:36:45+02:00\',\\n    toTimestamp: \'2023-10-26T13:36:45+02:00\',\\n    assetTypes: [\'token\', \'native\'],\\n    contractAddresses: [\'0xfaff15c6cdaca61a4f87d329689293e07c98f578\'],\\n    tokenIds: [\'5\', \'1245\'],\\n    transactionHashes: [\\n      \'0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a\',\\n      \'0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9\'\\n    ],\\n    blockNumbers: [18685487, 3245]\\n  }\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/transactions/search\\"\\nquerystring = {\\"perPage\\":\\"10\\",\\"page\\":\\"2\\"}\\npayload = {\\n    \\"from\\": [\\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"],\\n    \\"to\\": [\\"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea\\"],\\n    \\"chainIds\\": [1, 5, 137],\\n    \\"fromTimestamp\\": \\"2022-10-25T13:36:45+02:00\\",\\n    \\"toTimestamp\\": \\"2023-10-26T13:36:45+02:00\\",\\n    \\"assetTypes\\": [\\"token\\", \\"native\\"],\\n    \\"contractAddresses\\": [\\"0xfaff15c6cdaca61a4f87d329689293e07c98f578\\"],\\n    \\"tokenIds\\": [\\"5\\", \\"1245\\"],\\n    \\"transactionHashes\\": [\\"0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a\\", \\"0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9\\"],\\n    \\"blockNumbers\\": [18685487, 3245]\\n}\\nheaders = {\\n    \\"Content-Type\\": \\"application/json\\",\\n    \\"X-Api-Key\\": \\"<APIKEY>\\"\\n}\\nresponse = requests.request(\\"POST\\", url, json=payload, headers=headers, params=querystring)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/defi-data":{"post":{"summary":"Get Positions / Get Profits","description":"A JSON-RPC endpoint that supports two distinct methods:\\n  - **Get Positions**: Get a structured overview of the open DeFi positions linked to the specified address, at current time or at specific past block. In the JSON body, use `{ \\"method\\": \\"positions\\", ... }`.\\n  - **Get Profits**: Get a structured overview of performance (%) and USD profits of the specified address\' DeFi positions, at current time or at specific past block. In the JSON body, use `{ \\"method\\": \\"profits\\", ... }`. \\n\\nThe information is provided from a routinely refreshed cache. To insistently retrieve the most recent data, include the flag `{ \\"ignoreCache\\": true }`.\\n","operationId":"GetDefiDataInstitutional","tags":["DeFi"],"requestBody":{"$ref":"#/components/requestBodies/GetDefiDataInstitutionalBody"},"responses":{"200":{"$ref":"#/components/responses/DefiDataResponse"},"401":{"$ref":"#/components/responses/Unauthorized"},"403":{"$ref":"#/components/responses/Forbidden"}},"security":[{"ApiKey":[]}],"x-codeSamples":[{"lang":"cURL","source":"curl --request POST \\\\\\n  --url https://api.metamask-institutional.io/defi-data \\\\\\n  --header \'Content-Type: application/json\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\' \\\\\\n  --data \'{\\n  \\"method\\": \\"positions\\",\\n  \\"params\\": {\\n    \\"userAddress\\": \\"0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781\\"\\n  }\\n}\'\\n"},{"lang":"JavaScript","source":"import axios from \\"axios\\";\\nconst options = {\\n  method: \'POST\',\\n  url: \'https://api.metamask-institutional.io/defi-data\',\\n  headers: {\\n    \'Content-Type\': \'application/json\',\\n    \'X-Api-Key\': \'<APIKEY>\'\\n  },\\n  data: {\\n    method: \'positions\',\\n    params: {userAddress: \'0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781\'}\\n  }\\n};\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n"},{"lang":"Python","source":"import requests\\nurl = \\"https://api.metamask-institutional.io/defi-data\\"\\npayload = {\\n    \\"method\\": \\"positions\\",\\n    \\"params\\": {\\"userAddress\\": \\"0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781\\"}\\n}\\nheaders = {\\n    \\"Content-Type\\": \\"application/json\\",\\n    \\"X-Api-Key\\": \\"<APIKEY>\\"\\n}\\nresponse = requests.request(\\"POST\\", url, json=payload, headers=headers)\\nprint(response.text)\\n"}],"x-amazon-apigateway-integration":{"uri":{"Fn::Sub":["arn:aws:apigateway:${AWSRegion}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations",{"AWSRegion":{"Ref":"AWS::Region"},"FunctionArn":{"Fn::GetAtt":["LambdaIntegrationRequest","Arn"]}}]},"passthroughBehavior":"when_no_match","httpMethod":"POST","type":"aws_proxy"}}},"/docs":{"x-amazon-apigateway-any-method":{"x-amazon-apigateway-integration":{"uri":"https://consensys-vertical-apps.github.io/mmi-api-gateway/docs/","passthroughBehavior":"when_no_match","httpMethod":"ANY","type":"http_proxy"}}}},"components":{"requestBodies":{"GetDefiDataInstitutionalBody":{"required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/GetPositionsInstitutionalRpcRequest"},{"$ref":"#/components/schemas/GetProfitsInstitutionalRpcRequest"}]}}}}},"schemas":{"SearchTransactionsBodyDto":{"type":"object","properties":{"from":{"example":["0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea"],"description":"Source addresses","type":"array","items":{"type":"string"}},"to":{"example":["0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea"],"description":"Destination addresses","type":"array","items":{"type":"string"}},"chainIds":{"example":[1,5,137],"description":"List of chain IDs where to search the transactions in. \\n        Supported chain IDs are:\\n        <ul>\\n            <li>avalanche: <code>43114</code></li><li>arbitrum: <code>42161</code></li><li>aurora: <code>1313161554</code></li><li>bsc: <code>56</code></li><li>celo: <code>42220</code></li><li>cronos: <code>25</code></li><li>fantom: <code>250</code></li><li>ethereum: <code>1</code></li><li>moonbeam: <code>1284</code></li><li>moonriver: <code>1285</code></li><li>optimism: <code>10</code></li><li>polygon: <code>137</code></li><li>base: <code>8453</code></li>\\n        </ul>\\n       ","type":"array","items":{"type":"number"}},"fromTimestamp":{"type":"string","description":"The start date and time for the range of transactions to retrieve, formatted as an ISO 8601 string.","example":"2022-10-25T13:36:45+02:00"},"toTimestamp":{"type":"string","description":"The end date and time for the range of transactions to retrieve, formatted as an ISO 8601 string.","example":"2023-10-26T13:36:45+02:00"},"assetTypes":{"type":"array","example":["token","native"],"description":"Leave empty to retrieve all types of assets supported by the chain. Or specify the list of desired asset types.","items":{"type":"string","enum":["native","token","nft"]}},"contractAddresses":{"example":["0xfaff15c6cdaca61a4f87d329689293e07c98f578"],"description":"Limit the results to transfers of tokens with contract address in the list.","type":"array","items":{"type":"string"}},"tokenIds":{"example":["5","1245"],"description":"Limit the results to transfers of NFTs token ID in the list.","type":"array","items":{"type":"string"}},"transactionHashes":{"example":["0xfcae084c1fc34650747e09215095daa1d2c0fb001d065dc27dc3f5cadda2060a","0xfe0c49dc665b5bd1ba2d3904f8469ea7eec7647eb07a9e1416fdaba9d46461b9"],"description":"Limit the results to transactions with a hash in the list.","type":"array","items":{"type":"string"}},"blockNumbers":{"example":[18685487,3245],"description":"Limit the results to transactions included in the defined blocks numbers.","type":"array","items":{"type":"number"}}}},"TransferDto":{"type":"object","properties":{"chainId":{"type":"number","description":"Decimal ID of the chain where the transaction happened.","example":1},"hash":{"type":"string","description":"Hash of the transaction.","example":"0xe3852b9c47f651395d4d6a8f517c6f2f6ecb44445684fc32ef08155bacb62c68"},"transactionIndex":{"type":"number","description":"Integer of the transaction index position in the block.","example":14},"blockNumber":{"type":"number","description":"Block number where this transaction was in.","example":14732481},"blockHash":{"type":"string","description":"Hash of the block where this transaction was in.","example":"0x88b44988a25ce40d55c1a621e3ff9c86504fa3878489f4bbd88af8a6c88fe0e6"},"timestamp":{"format":"date-time","type":"string","description":"Unix timestamp in seconds of the block this transaction was in."},"nonce":{"type":"number","description":"The number of transactions made by the sender prior to this one.","example":457},"from":{"type":"string","description":"Address of the sender.","example":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea"},"to":{"type":"string","description":"Address of the receiver.","example":"0x8d203862455269aa79e2d5b7974d0816673f4e2c"},"value":{"type":"string","description":"Value transferred in Wei.","example":"81689008581039686"},"gas":{"type":"string","description":"Gas provided by the sender.","example":"31000"},"gasPrice":{"type":"string","example":"1000000000","description":"Gas price provided by the sender in Wei."},"isError":{"type":"boolean","description":"Whether it was successfull or rejected/cancelled.","example":true},"input":{"type":"string","description":"The data send along with the transaction.","example":"0x"},"contractAddress":{"type":"string","description":"Address of the token\'s contract, in case of a token transfer.","example":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"cumulativeGasUsed":{"type":"string","description":"The total amount of gas used when the transaction was executed in the block. It is cumulative because it includes the gas used by all preceding transactions in the block.","example":"1086011"},"gasUsed":{"type":"string","description":"The amount of gas that was used by this specific transaction.","example":"21000"},"confirmations":{"type":"number","description":"The number of blocks in the blockchain that have been confirmed and added after the block that this transaction is part of. A higher number of confirmations indicates a greater assurance that the transaction is final, as it means more blocks have been added after it.","example":4382},"methodId":{"type":"string","description":"The contract identifier for the function that was called in this transaction. It is derived from the first 4 bytes of the Keccak (SHA-3) hash of the ASCII form of the function signature.","example":"0x095ea7b3"},"functionName":{"type":"string","description":"The human-readable name of the function that was called in this transaction. It includes the function name and its parameters.","example":"approve(address _spender, uint256 _value)"},"assetType":{"type":"string","enum":["native","token","nft"],"description":"Type of asset being transacted."},"notes":{"type":"string","description":"This field contains any additional comments or notes that the user included when signing the transaction through the custodian. It provides context or details about the transaction that may be relevant for record-keeping or auditing purposes.","example":"Payment for services rendered"},"direction":{"type":"string","readOnly":true,"enum":["incoming","outgoing","internal"],"example":"incoming"},"nativeTokenPriceUsd":{"type":"number","description":"Price in US dollars of the chain\'s native token at the time of the transaction.","example":1600},"fee":{"type":"string","description":"Fee in Wei that the transaction cost. Is equal to `gasUsed * gasPrice`.","example":"31000000000000"},"feeUsd":{"type":"string","description":"Fee in US dollars that the transaction cost, using the price in US dollars of the chain\'s native token at the time of the transaction. Is equal to `gasUsed * gasPrice * nativeTokenPriceUsd`.","example":"0.11"},"category":{"type":"string","description":"Categorizes the type of transaction or operation. The categories cover a wide range of activities in the Ethereum ecosystem, including different types of exchanges (like 0x, 1inch), lending platforms (like Aave, Compound), domain name services (like ENS), and more. Each category represents a specific type of operation or interaction with a specific protocol or service.","enum":["0X_V3_EXCHANGE","1INCH_EXCHANGE","1INCH_V3_EXCHANGE","AAVE_BORROW","AAVE_DEPOSIT","AAVE_REPAY","AAVE_WITHDRAW","ARBITRUM_BRIDGE_IN","ARBITRUM_BRIDGE_OUT","BALANCER_CLAIM","BALANCER_DEPOSIT","BALANCER_EXCHANGE","BALANCER_WITHDRAW","COMPOUND_CLAIM","COMPOUND_V2_BORROW","COMPOUND_V2_DEPOSIT","COMPOUND_V2_REPAY","COMPOUND_V2_WITHDRAW","DAPPNODE_CLAIM","DEX_AG_EXCHANGE","ENS_CLAIM","ENS_DOMAIN_REGISTER","ENS_DOMAIN_RENEW","ENS_DOMAIN_RESOLVER_SET","ENS_DOMAIN_TRANSFER","ERC_20_APPROVE","ERC_20_MINT","ERC_20_TRANSFER","ERC_721_APPROVE","ERC_721_MINT","ERC_721_TRANSFER","ETHERMINE_MINING_PAYOUT","FUTURESWAP_GOVERNANCE_VOTE","GITCOIN_CLAIM","GNOSIS_SAFE_APPROVE_TX","GNOSIS_SAFE_WITHDRAW","IDEX_DEPOSIT_ETH","IDEX_DEPOSIT_TOKEN","IDEX_WITHDRAW","KYBER_EXCHANGE","METAMASK_V1_BRIDGE_OUT","METAMASK_V1_EXCHANGE","METAMASK_STAKE_V1","MININGPOOLHUB_MINING_PAYOUT","OPENSEA_CANCEL_ORDER","OPENSEA_EXCHANGE","OPENSEA_REGISTER","PARASWAP_V4_EXCHANGE","POLYGON_BRIDGE_IN","POLYGON_BRIDGE_OUT","POOLTOGETHER_CLAIM","POOLTOGETHER_DEPOSIT","POOLTOGETHER_WITHDRAW","SHAPESHIFT_CLAIM","SPARKPOOL_MINING_PAYOUT","SUSHISWAP_DEPOSIT","SUSHISWAP_EXCHANGE","SUSHISWAP_WITHDRAW","TORNADO_CASH_V1_DEPOSIT","TORNADO_CASH_V1_WITHDRAW","TO_0X_EXCHANGE_PROXY","TO_1INCH_V3_EXCHANGE_PROXY","TO_ARBITRUM_INBOX","TO_ARBITRUM_OUTBOX","TO_BALANCER_DISTRIBUTOR","TO_COMPOUND_COMPTROLLER","TO_DAPPNODE_DISTRIBUTOR","TO_ENS_REGISTRAR","TO_ENS_TOKEN_CONTRACT","TO_FOX_DISTRIBUTOR","TO_FUTURESWAP_GOVERNANCE","TO_GITCOIN_DISTRIBUTOR","TO_METAMASK_BRIDGE_V1","TO_METAMASK_STAKE_V1","TO_METAMASK_V1_ROUTER","TO_OPENSEA_REGISTRY","TO_OPENSEA_ROUTER","TO_PARASWAP_V4_EXCHANGE_PROXY","TO_POLYGON_BRIDGE","TO_POOLTOGETHER_DISTRIBUTOR","TO_SUSHISWAP_ROUTER","TO_UNISWAP_DISTRIBUTOR","TO_UNISWAP_V2_ROUTER","TO_UNISWAP_V3_ROUTER","UNISWAP_CLAIM","UNISWAP_V1_DEPOSIT","UNISWAP_V1_EXCHANGE","UNISWAP_V1_WITHDRAW","UNISWAP_V2_DEPOSIT","UNISWAP_V2_EXCHANGE","UNISWAP_V2_WITHDRAW","UNISWAP_V3_DEPOSIT","UNISWAP_V3_EXCHANGE","UNISWAP_V3_WITHDRAW","WETH_UNWRAP","WETH_WRAP"]},"userCategory":{"type":"string","example":"swap"},"tokenName":{"type":"string","description":"Name of the token/NFT, in case of a transfer.","example":"PepeCoin"},"tokenSymbol":{"type":"string","description":"Symbol of the token/NFT, in case of a transfer.","example":"PEPE"},"tokenIconUrl":{"type":"string","description":"URL of the token/NFT icone, in case of a transfer.","example":"https://s3.metamask-institutional.io/tokens/pepe.png"},"tokenDecimals":{"type":"number","description":"The number of decimal places that the token can be divided into.","example":18},"tokenPriceInNativeToken":{"type":"number","description":"The current price of the token in terms of the chain\'s native token (for instance Ether for Ethereum mainnnet).","example":200},"tokenPriceUsd":{"type":"number","description":"The current price of the token in terms of US dollars.","example":0.16},"nftCollectionName":{"type":"string","description":"The name of the collection to which the NFT belongs.","example":"The Merge: Regenesis"},"nftCollectionIconUrl":{"type":"string","description":"The URL of the icon or image associated with the NFT collection.","example":"https://img-hester.xyz/metadata.json"},"nftCollectionTokenId":{"type":"string","description":"The unique identifier of the token within its NFT collection. This ID is unique within the specific collection and is used to reference the individual NFT.","example":"1"}},"required":["chainId","hash","transactionIndex","blockNumber","blockHash","timestamp","nonce","from","to","value","gas","gasPrice","isError","input","contractAddress","cumulativeGasUsed","gasUsed","confirmations","methodId","functionName","assetType","notes","direction","nativeTokenPriceUsd","fee","feeUsd","category","userCategory","tokenName","tokenSymbol","tokenIconUrl","tokenDecimals","tokenPriceInNativeToken","tokenPriceUsd","nftCollectionName","nftCollectionIconUrl","nftCollectionTokenId"]},"PaginatedCustomerSnapshotsDto":{"type":"object","properties":{"meta":{"description":"Metadata about the current page.","allOf":[{"type":"object","properties":{"totalItems":{"type":"number","description":"Total number of results.","example":1000},"itemsPerPage":{"type":"number","description":"The number of results per page.","example":50},"totalPages":{"type":"number","description":"Total number of pages.","example":20},"currentPage":{"type":"number","description":"Index of the current page.","example":1}},"required":["totalItems","itemsPerPage","totalPages","currentPage"]}]},"links":{"description":"Hyperlinks that direct to the first, previous, next, and last pages.","allOf":[{"type":"object","properties":{"first":{"type":"string","readOnly":true},"previous":{"type":"string","readOnly":true},"current":{"type":"string","readOnly":true},"next":{"type":"string","readOnly":true},"last":{"type":"string","readOnly":true}},"required":["first","previous","current","next","last"]}]},"items":{"description":"The array of snapshot IDs for the current page.","type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"String identifying uniquely the resource."},"createdAt":{"format":"date-time","type":"string","description":"Date when the resource was created."},"updatedAt":{"format":"date-time","type":"string","description":"Date when the resource was last updated."},"customerId":{"type":"string","description":"String identifying uniquely the customer to whom the snapshot belongs.","example":"org_XYZ"}},"required":["id","createdAt","updatedAt","customerId"]}}},"required":["meta","links","items"]},"GetCustomerSnapshotResponseDto":{"type":"object","properties":{"id":{"type":"string","description":"String identifying uniquely the snapshot.","example":"b75b3fb7-bcee-4a44-ab71-3c7929055d62"},"createdAt":{"type":"string","description":"Date when the resource was created.","example":"2023-01-10T22:45:03.984Z"},"customer":{"description":"Details about the customer who owns the snapshot.","example":{"name":"Digital Asset Ventures"},"allOf":[{"type":"object","properties":{}}]},"addresses":{"description":"All Ethereum addresses that the snapshot covers.","example":["0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","0xe1ed4da4284924ddaf69983b4d813fb1be58c380","0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113"],"type":"array","items":{"type":"string"}},"data":{"description":"Detailed token balances, DeFi positions and NFT collections.","example":{"tokenBalances":[{"accountAddress":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","object":"token","chainId":137,"address":"0x0000000000000000000000000000000000000000","name":"MATIC","symbol":"MATIC","iconUrl":"https://static.debank.com/image/matic_token/logo_url/matic/e5a8a2860ba5cf740a474dcab796dc63.png","balance":{"s":1,"e":0,"c":[2,773993984042,60000000000000]},"value":{"price":0.57502,"marketCap":4605170634,"currency":"","amount":{"s":1,"e":0,"c":[0]},"priceChange1d":0.0283392,"pricePercentChange1h":-0.014860763935671727,"pricePercentChange1d":5.183862280233577,"pricePercentChange7d":16.667763767157503,"pricePercentChange14d":8.032487931016316,"pricePercentChange30d":6.801836354029829,"pricePercentChange200d":-78.51929372527474,"pricePercentChange1y":-44.95235985437751}},{"accountAddress":"0xe1ed4da4284924ddaf69983b4d813fb1be58c380","object":"token","chainId":1,"address":"0x429881672b9ae42b8eba0e26cd9c73711b891ca5","name":"PickleToken","symbol":"PICKLE","iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x429881672b9ae42b8eba0e26cd9c73711b891ca5/2b7b9d9e339bbaac086bdaf663b0072a.png","balance":{"s":1,"e":-1,"c":[60758586975942,17000000000000]},"value":{"currency":"","amount":{"s":1,"e":0,"c":[0]},"price":1.16,"marketCap":961949,"priceChange1d":-0.047645675804809606,"pricePercentChange1h":-0.4363861738988935,"pricePercentChange1d":-3.946458599906334,"pricePercentChange7d":-6.607414201212489,"pricePercentChange14d":-5.4487660945915035,"pricePercentChange30d":-10.826075037454212,"pricePercentChange200d":-83.65775330866767,"pricePercentChange1y":-84.1952967359055}},{"accountAddress":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","object":"token","chainId":1,"address":"0x4575f41308ec1483f3d399aa9a2826d74da13deb","name":"Orchid","symbol":"OXT","iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x4575f41308ec1483f3d399aa9a2826d74da13deb/3180aed0a0777c4e34f20966e90b41d5.png","balance":{"s":1,"e":-1,"c":[82345767000000]},"value":{"price":0.09934,"marketCap":58744249,"currency":"","amount":{"s":1,"e":0,"c":[0]},"priceChange1d":-0.006029810783972425,"pricePercentChange1h":-0.05330237010265641,"pricePercentChange1d":-5.722522759347138,"pricePercentChange7d":-5.785688481107546,"pricePercentChange14d":-6.495645055923138,"pricePercentChange30d":-10.760887619117135,"pricePercentChange200d":-74.48792790941388,"pricePercentChange1y":-69.85086950365066}}],"defiPositions":{"data":[{"name":"Aave V2","protocolType":"Lending & Borrowing","protocolId":"aave2","description":"No description","siteUrl":"https://app.aave.com","iconUrl":"https://static.debank.com/image/project/logo_url/aave2/b8d1ef85570855176b102edf8cda6f8d.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":1.852,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/aave2/0x0000000000000000000000000000000000000000","object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001013841251048857,"underlying":[{"object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001013841251048857,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":1.852}],"marketValue":1.852}],"borrow":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/aave2/0x0000000000000000000000000000000000000000","object":"Asset","name":"USDC","address":"0x0000000000000000000000000000000000000000","symbol":"USDC","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.1,"underlying":[{"object":"Asset","name":"USDC","address":"0x0000000000000000000000000000000000000000","symbol":"USDC","decimals":6,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":10,"value":{"id":"usdc","price":1,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":10}],"marketValue":10}],"borrowMarketValue":10},{"name":"Balancer V2","protocolType":"Liquidity Provision","protocolId":"balancer2","description":"No description","siteUrl":"https://balancer.finance","iconUrl":"https://static.debank.com/image/project/logo_url/balancer2/4318f98916b139a44996fc06531e9074.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":17.81922,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/balancer2/0x5c6ee304399dbdb9c8ef030ab642b10820db8f56","object":"Asset","name":"Balancer / ETH","address":"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56","symbol":"Balancer / ETH","marketValue":17.81922,"underlying":[{"object":"Token","name":"Balancer","address":"0xba100000625a3754423978a60c9317c58a424e3d","symbol":"BAL","decimals":18,"iconUrl":"https://static.debank.com/image/eth_token/logo_url/0xba100000625a3754423978a60c9317c58a424e3d/52990c207f4001bd9090dfd90e54374a.png","balance":4.0113145919184445,"value":{"id":"balancer","price":3.56,"marketCap":156600162,"allTimeHigh":74.45,"allTimeLow":2.92,"totalVolume":11016314,"high1d":3.65,"low1d":3.32,"circulatingSupply":43985024.5346548,"dilutedMarketCap":213461781,"marketCapPercentChange1d":6.31865,"priceChange1d":0.210766,"pricePercentChange1h":-0.2647810175656602,"pricePercentChange1d":6.287970211765563,"pricePercentChange7d":4.327153284450219,"pricePercentChange14d":20.393137002390816,"pricePercentChange30d":6.8593701924506405,"pricePercentChange200d":-50.492156864972394,"pricePercentChange1y":-46.54452175381557},"marketValue":14.28026},{"object":"Token","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.0019332527759715326,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":3.53896}]}],"borrow":[],"borrowMarketValue":0},{"name":"LIDO","protocolType":"Staked","protocolId":"lido","description":"No description","siteUrl":"https://stake.lido.fi","iconUrl":"https://static.debank.com/image/project/logo_url/lido/081388ebc44fa042561749bd5338d49e.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":1.87033,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/lido/0x0000000000000000000000000000000000000000","object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001021713285676878,"underlying":[{"object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.001021713285676878,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":1.87033}],"marketValue":1.87033}]},{"name":"Uniswap V3","protocolType":"Liquidity Provision","protocolId":"uniswap3","description":"No description","siteUrl":"https://app.uniswap.org","iconUrl":"https://static.debank.com/image/project/logo_url/uniswap3/87a541b3b83b041c8d12119e5a0d19f0.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":70.26603,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/uniswap3-124771/0x1d42064fc4beb5f8aaf85f4617ae8b3b5b8bd801","object":"Asset","name":"Uniswap / ETH","address":"0x1d42064fc4beb5f8aaf85f4617ae8b3b5b8bd801","symbol":"Uniswap / ETH","marketValue":70.26603,"underlying":[{"object":"Token","name":"Uniswap","address":"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984","symbol":"UNI","decimals":18,"iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984/fcee0c46fc9864f48ce6a40ed1cdd135.png","balance":15.046257965830597,"value":{"id":"uniswap","price":4.67,"marketCap":3505812982,"allTimeHigh":44.92,"allTimeLow":1.03,"totalVolume":892819656,"high1d":4.89,"low1d":4.03,"circulatingSupply":753766667,"dilutedMarketCap":4651058657,"marketCapPercentChange1d":13.47024,"priceChange1d":0.584025,"pricePercentChange1h":1.1202531695004518,"pricePercentChange1d":14.28286679697393,"pricePercentChange7d":9.891734785320672,"pricePercentChange14d":19.24163775962673,"pricePercentChange30d":3.7556879912983074,"pricePercentChange200d":-25.099628455591912,"pricePercentChange1y":-33.56555916912446},"marketValue":70.26603},{"object":"Token","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0,"value":{"id":"ethereum","price":1833.66,"marketCap":220352286062,"allTimeHigh":4878.26,"allTimeLow":0.432979,"totalVolume":20561170998,"high1d":1873.12,"low1d":1787.39,"circulatingSupply":120268792.387346,"dilutedMarketCap":220352286062,"marketCapPercentChange1d":1.63026,"priceChange1d":29.27,"pricePercentChange1h":-0.14573749597128735,"pricePercentChange1d":1.6223115128688153,"pricePercentChange7d":1.5131993015013505,"pricePercentChange14d":18.096740104043988,"pricePercentChange30d":9.803310171318588,"pricePercentChange200d":-12.58298900098529,"pricePercentChange1y":15.490449790847343},"marketValue":0}]}],"borrow":[],"borrowMarketValue":0},{"name":"Uniswap V3","protocolType":"Rewards","protocolId":"uniswap3","description":"No description","siteUrl":"https://app.uniswap.org","iconUrl":"https://static.debank.com/image/project/logo_url/uniswap3/87a541b3b83b041c8d12119e5a0d19f0.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":4.07081,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/uniswap3/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984","object":"Asset","name":"Uniswap","address":"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984","symbol":"UNI","decimals":18,"iconUrl":"https://static.debank.com/image/eth_token/logo_url/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984/fcee0c46fc9864f48ce6a40ed1cdd135.png","balance":0.8762154536568376,"value":{"price":4.645881421181949},"underlying":[],"marketValue":4.07081}]},{"name":"Uniswap V3","protocolType":"Rewards","protocolId":"uniswap3","description":"No description","siteUrl":"https://app.uniswap.org","iconUrl":"https://static.debank.com/image/project/logo_url/uniswap3/87a541b3b83b041c8d12119e5a0d19f0.png","accountAddress":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113","chainId":1,"supplyMarketValue":10.36386,"supply":[{"id":"0xc16414ac1fedfdac4f8a09674d994e1bbb9d7113/1/uniswap3/0x0000000000000000000000000000000000000000","object":"Asset","name":"ETH","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","decimals":18,"iconUrl":"https://static.debank.com/image/token/logo_url/eth/935ae4e4d1d12d59a99717a24f2540b5.png","balance":0.005659640837326489,"value":{"price":1831.07},"underlying":[],"marketValue":10.36386}]}]},"nftCollections":[{"accountAddress":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","chainId":1,"name":"Ethereum Name Service","imageUrl":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","marketValue":5.371279017540634,"nativeToken":{"price":1332.83,"symbol":"ETH"},"floorPrice":{"lowest":0.00005179274,"looksrare":0.001,"opensea":0.00005179274},"nfts":[{"id":"0xfc75970a11669c571a4b8f8abeceeecffa5dc7ea/1/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","tokenId":"62461024984783631771844942940378063341359937594037117814829513143102666032471","symbol":"ENS","metadata":{"is_normalized":true,"name":"defiportal.eth","description":"defiportal.eth, an ENS name.","attributes":[{"trait_type":"Created Date","display_type":"date","value":""},{"trait_type":"Length","display_type":"number","value":10},{"trait_type":"Registration Date","display_type":"date","value":1615047822000},{"trait_type":"Expiration Date","display_type":"date","value":1646604774000}],"name_length":10,"url":"https://app.ens.domains/name/defiportal.eth","version":0,"background_image":"https://metadata.ens.domains/mainnet/avatar/defiportal.eth","image_url":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/0x8a17aff4849bbeac92762df87007630c9bddf2af2f84d9be20e552586dedc557/image"},"estimatedPrice":{"value":0,"usd":0},"attribution":{"oat":{"value":0.00154,"usd":2.0525582},"1d":{"value":0.00154,"usd":2.0525582},"1w":{"value":0.00154,"usd":2.0525582},"1m":{"value":0.00154,"usd":2.0525582}},"transaction":{"value":0.00349,"usd":5.371279017540634,"symbol":"ETH","date":"2021-03-06T16:23:42.000Z","hash":"0x5f5dfe40dbef0d7bd8792852756d6ce0c671d6c0cc64cb5d64e0f2845b388d3a","amount":1}}]},{"accountAddress":"0xe1ed4da4284924ddaf69983b4d813fb1be58c380","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","chainId":1,"name":"Ethereum Name Service","imageUrl":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","marketValue":5.371279017540634,"nativeToken":{"price":1332.83,"symbol":"ETH"},"floorPrice":{"lowest":0.00005179274,"looksrare":0.001,"opensea":0.00005179274},"nfts":[{"id":"0xe1ed4da4284924ddaf69983b4d813fb1be58c380/1/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/62461024984783631771844942940378063341359937594037117814829513143102666032471","address":"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85","tokenId":"62461024984783631771844942940378063341359937594037117814829513143102666032471","symbol":"ENS","metadata":{"is_normalized":true,"name":"hello.eth","description":"defiportal.eth, an ENS name.","attributes":[{"trait_type":"Created Date","display_type":"date","value":""},{"trait_type":"Length","display_type":"number","value":10},{"trait_type":"Registration Date","display_type":"date","value":1615047822000},{"trait_type":"Expiration Date","display_type":"date","value":1646604774000}],"name_length":10,"url":"https://app.ens.domains/name/defiportal.eth","version":0,"background_image":"https://metadata.ens.domains/mainnet/avatar/defiportal.eth","image_url":"https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/0x8a17aff4849bbeac92762df87007630c9bddf2af2f84d9be20e552586dedc557/image"},"estimatedPrice":{"value":0,"usd":0},"attribution":{"oat":{"value":0.00154,"usd":2.0525582},"1d":{"value":0.00154,"usd":2.0525582},"1w":{"value":0.00154,"usd":2.0525582},"1m":{"value":0.00154,"usd":2.0525582}},"transaction":{"value":0.00349,"usd":5.371279017540634,"symbol":"ETH","date":"2021-03-06T16:23:42.000Z","hash":"0x5f5dfe40dbef0d7bd8792852756d6ce0c671d6c0cc64cb5d64e0f2845b388d3a","amount":1}}]}]},"allOf":[{"type":"object","properties":{}}]}},"required":["id","createdAt","customer","addresses","data"]},"CustomerAudDto":{"type":"object","properties":{"total":{"type":"number","description":"The total dollar value of the portfolio. Is equal to `tokenBalances + deFiPositions + nftCollections`.","minimum":0},"tokenBalances":{"type":"number","description":"The dollar value of any token assets.","minimum":0},"deFiPositions":{"type":"number","description":"The dollar value of any DeFi assets (less the dollar value of any DeFi debts), dollar value of any rewards or other accruals, and the dollar value of staking positions and staking rewards.","minimum":0},"nftCollections":{"type":"number","description":"The dollar value of NFT floor prices.","minimum":0}},"required":["total","tokenBalances","deFiPositions","nftCollections"]},"Chain":{"type":"number","enum":[1,10,56,137,250,8453,42161,43114,59144],"description":"IDs of supported EVM chains"},"ChainIdToBlockNumberMap":{"type":"object","description":"Instead of current values, return the values as they were historically at given block numbers on given chains.","properties":{"1":{"type":"integer","format":"int32","example":18982865,"description":"Ethereum Mainnet"},"10":{"type":"integer","format":"int32","example":114683740,"description":"OP Mainnet"},"56":{"type":"integer","format":"int32","example":35147795,"description":"BNB Smart Chain Mainnet"},"137":{"type":"integer","format":"int32","example":52193595,"description":"Polygon Mainnet"},"250":{"type":"integer","format":"int32","example":74064840,"description":"Fantom Opera"},"8453":{"type":"integer","format":"int32","example":9088502,"description":"Base"},"42161":{"type":"integer","format":"int32","example":169326747,"description":"Arbitrum One"},"43114":{"type":"integer","format":"int32","example":12885796,"description":"Avalanche C-Chain"},"59144":{"type":"integer","format":"int32","example":1609374,"description":"Linea"}}},"DefiData":{"type":"object","required":["createdAt","updatedAt","data"],"properties":{"createdAt":{"type":"string","format":"date-time","example":"2024-01-12T08:25:56.455Z"},"updatedAt":{"type":"string","format":"date-time","example":"2024-01-12T08:25:56.455Z"},"data":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/Position"}},{"type":"array","items":{"$ref":"#/components/schemas/Profit"}}]}}},"Eth1Address":{"type":"string","description":"An ethereum 1 address. 20-bytes, hex encoded with 0x prefix, case insensitive.","example":"0x47ab2ba28c381011fa1f25417c4c2b2c0d5b4781","pattern":"^0x[a-fA-F0-9]{40}$"},"GetPositionsInstitutionalRpcRequest":{"allOf":[{"$ref":"#/components/schemas/GetPositionsRpcRequest"},{"$ref":"#/components/schemas/IgnoreCache"}]},"GetPositionsRpcRequest":{"allOf":[{"$ref":"#/components/schemas/RpcRequest"},{"type":"object","properties":{"method":{"type":"string","enum":["positions"],"description":"The JSON-RPC method. Must be \\"positions\\"."},"params":{"$ref":"#/components/schemas/GetPositionsRpcRequestParams"}},"required":["method","params"]}]},"GetPositionsRpcRequestParams":{"type":"object","properties":{"userAddress":{"$ref":"#/components/schemas/Eth1Address"},"filterProtocolIds":{"type":"array","description":"Limit the results to positions on the passed list of DeFi protocols.","items":{"$ref":"#/components/schemas/Protocol"}},"filterChainIds":{"type":"array","description":"Limit the results to positions on the passed list of chains.","items":{"$ref":"#/components/schemas/Chain"}},"blockNumbers":{"$ref":"#/components/schemas/ChainIdToBlockNumberMap"},"filterProtocolTokens":{"type":"array","example":["0x9ff58f4ffb29fa2266ab25e75e2a8b3503311656"],"description":"Limit the results to positions on the passed list of LP tokens.","items":{"$ref":"#/components/schemas/Eth1Address"}}},"required":["userAddress"]},"GetProfitsInstitutionalRpcRequest":{"allOf":[{"$ref":"#/components/schemas/GetProfitsRpcRequest"},{"$ref":"#/components/schemas/IgnoreCache"}]},"GetProfitsRpcRequest":{"allOf":[{"$ref":"#/components/schemas/RpcRequest"},{"type":"object","properties":{"method":{"type":"string","enum":["profits"],"description":"The JSON-RPC method. Must be \\"profits\\"."},"params":{"$ref":"#/components/schemas/GetProfitsRpcRequestParams"}},"required":["method","params"]}]},"GetProfitsRpcRequestParams":{"type":"object","properties":{"userAddress":{"$ref":"#/components/schemas/Eth1Address"},"timePeriod":{"$ref":"#/components/schemas/TimePeriod"},"filterProtocolIds":{"type":"array","items":{"$ref":"#/components/schemas/Protocol"}},"filterChainIds":{"type":"array","items":{"$ref":"#/components/schemas/Chain"}},"toBlockNumbersOverride":{"$ref":"#/components/schemas/ChainIdToBlockNumberMap"},"filterProtocolTokens":{"type":"array","example":["0x9ff58f4ffb29fa2266ab25e75e2a8b3503311656"],"description":"Limit the results to profits on the passed list of LP tokens.","items":{"$ref":"#/components/schemas/Eth1Address"}}},"required":["userAddress","timePeriod"]},"IgnoreCache":{"type":"object","properties":{"ignoreCache":{"type":"boolean","default":false,"description":"Optionally set this flag to `true` to insistently retrieve the most recent data instead of cached data."}}},"Position":{"type":"object","properties":{"protocolId":{"type":"string","description":"Identifier of the DeFi protocol.","example":"aave-v2"},"name":{"type":"string","description":"Display name of the protocol.","example":"Aave V2"},"description":{"type":"string","description":"Brief description of the protocol adapter.","example":"Aave V2 is a decentralized non-custodial money market protocol."},"siteUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s website.","example":"https://aave.com/"},"iconUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s icon.","example":"https://aave.com/favicon.ico"},"positionType":{"$ref":"#/components/schemas/PositionType"},"chainId":{"type":"integer","description":"Blockchain ID where the protocol operates (e.g., 1, 10, 56).","example":1},"productId":{"type":"string","description":"Identifier for the specific product within the protocol.","example":"aave-v2-product-1"},"success":{"type":"boolean","description":"Boolean indicating if the query was successful.","example":true},"tokens":{"type":"array","description":"An array of token objects, detailing each token\'s information like address, name, symbol, balance, and nested token details.","items":{"$ref":"#/components/schemas/Token"}},"error":{"type":"object","description":"Present in the second item if success is false, providing an error message and details."}},"required":["protocolId","name","description","siteUrl","iconUrl","positionType","chainId","productId","success","tokens"]},"PositionType":{"type":"string","enum":["supply","lend","borrow","stake","reward","fiat-prices"],"example":"lend","description":"Type of position. It can be one of the following:\\n  - `supply`: Liquidity position e.g. a dex pool\\n  - `lend`: Providing liquidity to a lending and borrow protocol\\n  - `borrow`: Getting a loan from a lending and borrow protocol\\n  - `stake`: Staking a token e.g. staking eth or staking an lp token\\n  - `reward`: Claimable rewards, these type of positions will be merged with the equivalent lp position\\n  - `fiat-prices`: Fiat prices\\n"},"Profit":{"type":"object","properties":{"protocolId":{"type":"string","description":"Identifier of the DeFi protocol.","example":"compound"},"name":{"type":"string","description":"Display name of the protocol.","example":"Compound"},"description":{"type":"string","description":"Brief description of the protocol adapter.","example":"Compound is a decentralized, blockchain-based protocol that allows you to lend and borrow cryptocurrencies."},"siteUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s website.","example":"https://compound.finance/"},"iconUrl":{"type":"string","format":"uri","description":"URL of the protocol\'s icon.","example":"https://compound.finance/images/compound-logo.svg"},"positionType":{"$ref":"#/components/schemas/PositionType"},"chainId":{"type":"integer","description":"Blockchain ID where the protocol operates (e.g., 1, 10, 56).","example":1},"productId":{"type":"string","description":"Identifier for the specific product within the protocol.","example":"pool"},"success":{"type":"boolean","description":"Boolean indicating if the query was successful.","example":true},"tokens":{"type":"array","description":"An array of token objects, empty in the first item and populated in the third. For each token, details like address, name, symbol, type, profit, performance, and calculation data are provided.","items":{"$ref":"#/components/schemas/Token"}},"fromBlock":{"type":"integer","description":"Starting block for the snapshot.","example":10000000},"toBlock":{"type":"integer","description":"Ending block for the snapshot.","example":10005000},"error":{"type":"object","description":"Present in the second item if success is false, providing an error message and details."}},"required":["protocolId","name","description","siteUrl","iconUrl","positionType","chainId","productId","success","tokens","fromBlock","toBlock"]},"Protocol":{"type":"string","enum":["aave-v2","aave-v3","chimp-exchange","compound","convex","curve","gmx","iziswap","lido","maker","prices","stargate","swell","syncswap","uniswap-v3"],"description":"List of the DeFi protocols supported."},"RpcRequest":{"type":"object","required":["method","params"],"properties":{"method":{"type":"string"},"params":{"type":"object"}}},"TimePeriod":{"type":"integer","enum":[1,7,30],"description":"Specifies the time frame, in days, over which the profits are calculated. For example, a `timePeriod` of `30` would return the performance and USD profits of the user\'s DeFi positions over the past 30 days."},"Token":{"type":"object","properties":{"address":{"type":"string","description":"Blockchain address of the token.","example":"0x030ba81f1c18d280636f32af80b9aad02cf0854e"},"name":{"type":"string","description":"Name of the token.","example":"Aave interest bearing WETH"},"symbol":{"type":"string","description":"Symbol of the token.","example":"aWETH"},"decimals":{"type":"integer","description":"Decimal precision of the token.","example":18},"balanceRaw":{"type":"string","description":"Raw balance of the token.","example":"815273802661604223213"},"type":{"type":"string","enum":["protocol","claimable","underlying","underlying-claimable","fiat"],"example":"protocol","description":"Type of token"},"balance":{"type":"number","description":"Normalized balance of the token.","example":815.2738026616042},"iconUrl":{"type":"string","format":"uri","description":"URL for the token\'s icon.","example":"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},"tokens":{"type":"array","description":"Nested array for tokens within other tokens, following the same structure.","items":{"$ref":"#/components/schemas/Token"},"example":"[\\n  {\\n    \\"address\\": \\"TheUnitedStatesMint\\",\\n    \\"name\\": \\"USD\\",\\n    \\"symbol\\": \\"USD\\",\\n    \\"decimals\\": 18,\\n    \\"type\\": \\"fiat\\",\\n    \\"balanceRaw\\": \\"2116601421387500276445819\\",\\n    \\"balance\\": \\"2116601.421387500276445819\\"\\n  }\\n]\\n"}},"required":["address","name","symbol","decimals","balanceRaw","type","balance","iconUrl"]}},"responses":{"DefiDataResponse":{"description":"A structured overview of the open DeFi positions linked to a specific address, or a structured overview of performance (%) and USD profits of the specified address\' DeFi positions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DefiData"}}}},"Unauthorized":{"description":"Missing header \'X-Api-Key\'","content":{"application/json":{"example":{"statusCode":401,"message":"Unauthorized"}}}},"Forbidden":{"description":"API key invalid, expired, or no requests left","content":{"application/json":{"example":{"statusCode":403,"message":"Forbidden"}}}}},"securitySchemes":{"ApiKey":{"type":"apiKey","in":"header","name":"X-Api-Key","description":"To ensure secure access to our REST API, you need to authenticate your requests with an API key. To generate your API key, visit the page [API](https://metamask-institutional.io/api-subscription) in the dashboard. Include the API key in the header `X-Api-Key` on your HTTP requests.\\n\\nThe following example uses cURL to get a snapshot using the `GET /snapshots/{snapshotId}` endpoint:\\n\\n```bash\\ncurl --request GET \\\\\\n  --url \'https://api.metamask-institutional.io/snapshots/{snapshotId}\' \\\\\\n  --header \'X-Api-Key: <APIKEY>\'\\n```\\n\\nYou can use any programming language:\\n\\n```js\\nimport axios from \\"axios\\";\\n\\nconst options = {\\n  method: \'GET\',\\n  url: \'https://api.metamask-institutional.io/snapshots/{snapshotId}\',\\n  headers: {\'X-Api-Key\': \'<APIKEY>\'}\\n};\\n\\naxios.request(options).then(function (response) {\\n  console.log(response.data);\\n}).catch(function (error) {\\n  console.error(error);\\n});\\n```\\n\\n\\n- Do not share your API key. Treat it like a password.\\n- If you lost your API key, rotate it via the page [API](https://metamask-institutional.io/api-subscription) in the dashboard.\\n- If you believe your API key has been compromised, rotate it via the page [API](https://metamask-institutional.io/api-subscription) in the dashboard.\\n- Failure to include the API key in your requests will result in an authentication error.\\n"}}}}}},"docusaurus-theme-classic":{},"docusaurus-theme-redoc":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}')}}]);